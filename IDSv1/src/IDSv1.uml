<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Cn0MQBwLEe-urICxG0GjCg" name="IDSv1">
    <eAnnotations xmi:id="_CtGU4BwLEe-urICxG0GjCg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_CtGU4RwLEe-urICxG0GjCg" source="codegen">
        <details xmi:id="_CtG78BwLEe-urICxG0GjCg" key="codegenDirectory" value="/IDSv1/src"/>
        <details xmi:id="_DVKacBwLEe-urICxG0GjCg" key="AssociatedSourceCode" value="/IDSv1/src/it/unibs/fp/mylib/Estrattore.java;3587178407/1;/IDSv1/src/it/unibs/ids/progetto/news/ecccezioni/RootTreeException.java;2220849632/1;/IDSv1/src/it/unibs/fp/mylib/MyMenu.java;1580912307/1;/IDSv1/src/it/unibs/ids/progetto/Application.java;2016278667/1;/IDSv1/src/it/unibs/ids/progetto/Comprensorio.java;599848612/1;/IDSv1/src/it/unibs/ids/progetto/Configuratore.java;3819593131/1;/IDSv1/src/it/unibs/ids/progetto/Credenziali.java;1037184818/1;/IDSv1/src/it/unibs/ids/progetto/Gerarchia.java;2880896661/1;/IDSv1/src/it/unibs/ids/progetto/Main.java;1198604833/1;/IDSv1/src/it/unibs/ids/progetto/news/ecccezioni/LeafHasChildrenException.java;1116606860/1;/IDSv1/src/it/unibs/ids/progetto/Utente.java;1745827764/1;/IDSv1/src/it/unibs/ids/progetto/Utenza.java;1219128152/1;/IDSv1/src/it/unibs/ids/progetto/news/Albero.java;66315239/1;/IDSv1/src/it/unibs/ids/progetto/news/DefaultInitializer.java;2694919933/1;/IDSv1/src/it/unibs/ids/progetto/news/FileManager.java;3077044089/1;/IDSv1/src/it/unibs/ids/progetto/news/Geografia.java;1840046479/1;/IDSv1/src/it/unibs/ids/progetto/news/ecccezioni/ConfLoginFailException.java;2897680953/1;/IDSv1/src/it/unibs/ids/progetto/Nodo.java;605442636/1;/IDSv1/src/it/unibs/fp/mylib/InputDati.java;1866672090/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_DHoUwBwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_DHoUwRwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_DHoUwhwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_DHoUwxwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_DHoUxBwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_DHoUxRwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_DHo70BwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_DHo70RwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_DHo70hwLEe-urICxG0GjCg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_DGH44BwLEe-urICxG0GjCg" name="it">
      <packagedElement xmi:type="uml:Package" xmi:id="_DGH44RwLEe-urICxG0GjCg" name="unibs">
        <packagedElement xmi:type="uml:Package" xmi:id="_DGIf8BwLEe-urICxG0GjCg" name="fp">
          <packagedElement xmi:type="uml:Package" xmi:id="_DGOmkBwLEe-urICxG0GjCg" name="mylib">
            <packagedElement xmi:type="uml:Class" xmi:id="_DHkqYBwLEe-urICxG0GjCg" name="Estrattore">
              <ownedComment xmi:id="_DNrSYBwLEe-urICxG0GjCg">
                <body>Classe per generare Numeri Casuali e Stringhe Casuali

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DMzIoBwLEe-urICxG0GjCg" name="estrattore" isStatic="true" type="_DMaHEBwLEe-urICxG0GjCg" association="_DN4twBwLEe-urICxG0GjCg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DMzvsBwLEe-urICxG0GjCg" value="new Random()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNWiQBwLEe-urICxG0GjCg" name="estraiIntero" specification="_DHpi4BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNXJUBwLEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNXJURwLEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNXJUhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int range = max + 1 - min;
		 int casual = estrattore.nextInt(range);
		 return casual + min;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNaMoBwLEe-urICxG0GjCg" name="estraiDouble" specification="_DHrYEBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNaMoRwLEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNaMohwLEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNaMoxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double range = max - min;
	 double casual = estrattore.nextDouble();
	 
	 double posEstratto = range*casual;
	 
	 return posEstratto + min;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNazsBwLEe-urICxG0GjCg" name="estraiString" specification="_DHr_IBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNazsRwLEe-urICxG0GjCg" name="lista">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNazshwLEe-urICxG0GjCg" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNazsxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder identificatore = new StringBuilder();
		Random rand = new Random();
		
		for (int i = 0; i &lt; length; i++) {
			identificatore.append(lista.charAt(rand.nextInt(lista.length())));
		}
		
		return identificatore.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHpi4BwLEe-urICxG0GjCg" name="estraiIntero" isStatic="true" method="_DNWiQBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DHqJ8BwLEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHqJ8RwLEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHqxABwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHrYEBwLEe-urICxG0GjCg" name="estraiDouble" isStatic="true" method="_DNaMoBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DHrYERwLEe-urICxG0GjCg" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHrYEhwLEe-urICxG0GjCg" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHrYExwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHr_IBwLEe-urICxG0GjCg" name="estraiString" isStatic="true" method="_DNazsBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DHr_IRwLEe-urICxG0GjCg" name="lista">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHr_IhwLEe-urICxG0GjCg" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHr_IxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHvCcBwLEe-urICxG0GjCg" name="MyMenu">
              <ownedComment xmi:id="_DNr5cRwLEe-urICxG0GjCg">
                <body>Questa classe rappresenta un menu testuale generico a più voci.
Si suppone che la voce per uscire sia sempre associata alla scelta 0 
e sia presentata in fondo al menu.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM0WwxwLEe-urICxG0GjCg" name="CORNICE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM090BwLEe-urICxG0GjCg" value="&quot;-------------------------------------------------------------------&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM090hwLEe-urICxG0GjCg" name="VOCE_USCITA" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM090xwLEe-urICxG0GjCg" value="&quot;0\tEsci&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM1k4BwLEe-urICxG0GjCg" name="RICHIESTA_INSERIMENTO" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM1k4RwLEe-urICxG0GjCg" value="&quot;Digita il numero dell'opzione desiderata > &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM1k4xwLEe-urICxG0GjCg" name="titolo" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM2L8RwLEe-urICxG0GjCg" name="voci" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DM2L8hwLEe-urICxG0GjCg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNazthwLEe-urICxG0GjCg" name="MyMenu" specification="_DHwQkBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNaztxwLEe-urICxG0GjCg" name="titolo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNazuBwLEe-urICxG0GjCg" name="voci">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DNazuRwLEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNazuhwLEe-urICxG0GjCg" type="_DHvCcBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.titolo = titolo;
     this.voci = voci;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNbawBwLEe-urICxG0GjCg" name="scegli" specification="_DHw3pBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNbawRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>stampaMenu();
     return InputDati.leggiInteroRange(RICHIESTA_INSERIMENTO, 0, voci.length);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNbawhwLEe-urICxG0GjCg" name="stampaMenu" specification="_DHxesRwLEe-urICxG0GjCg">
                <language>java</language>
                <body>System.out.println(CORNICE);
     System.out.println(titolo);
     System.out.println(CORNICE);
     for (int i = 0; i &lt; voci.length; i++) {
         System.out.println((i + 1) + &quot;\t&quot; + voci[i]);
     }
     System.out.println();
     System.out.println(VOCE_USCITA);
     System.out.println();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DHwQkBwLEe-urICxG0GjCg" name="MyMenu" method="_DNazthwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DHw3oBwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHw3oRwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DNr5chwLEe-urICxG0GjCg">
                  <body>Costruttore della classe MyMenu.
     * 
     * @param titolo Il titolo del menu
     * @param voci L'array di stringhe contenente le voci del menu</body>
                </ownedComment>
                <ownedParameter xmi:id="_DHwQkRwLEe-urICxG0GjCg" name="titolo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHwQkhwLEe-urICxG0GjCg" name="voci">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHw3oxwLEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHw3ohwLEe-urICxG0GjCg" type="_DHvCcBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DHw3pBwLEe-urICxG0GjCg" name="scegli" method="_DNbawBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNr5cxwLEe-urICxG0GjCg">
                  <body>Metodo per permettere all'utente di scegliere un'opzione dal menu.
     * 
     * @return Il numero dell'opzione scelta dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DHxesBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DHxesRwLEe-urICxG0GjCg" name="stampaMenu" method="_DNbawhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNr5dBwLEe-urICxG0GjCg">
                  <body>Metodo per stampare il menu a schermo.</body>
                </ownedComment>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DJA00BwLEe-urICxG0GjCg" name="InputDati">
              <ownedComment xmi:id="_DNu80hwLEe-urICxG0GjCg">
                <body>Classe per gestire l'input da parte dell'utente.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DNNYUBwLEe-urICxG0GjCg" name="lettore" visibility="private" isStatic="true" type="_DMu3MBwLEe-urICxG0GjCg" association="_DOBQoRwLEe-urICxG0GjCg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNNYURwLEe-urICxG0GjCg" value="creaScanner()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNNYUxwLEe-urICxG0GjCg" name="DATE_STRING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNNYVBwLEe-urICxG0GjCg" value="&quot;Inserisci la data [gg/mm/yyyy]: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNNYVRwLEe-urICxG0GjCg" name="ORARIO_STRING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNN_YBwLEe-urICxG0GjCg" value="&quot;Inserisci l'orario [hh:mm:ss] -> &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNN_YRwLEe-urICxG0GjCg" name="ORARIO_STRING_NOHOUR" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNN_YhwLEe-urICxG0GjCg" value="&quot;Inserisci l'orario [mm:ss] -> &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNN_YxwLEe-urICxG0GjCg" name="ERRORE_FORMATO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNN_ZBwLEe-urICxG0GjCg" value="&quot;Attenzione: il dato inserito non e' nel formato corretto&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNOmcBwLEe-urICxG0GjCg" name="ERRORE_MINIMO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNOmcRwLEe-urICxG0GjCg" value="&quot;Attenzione: e' richiesto un valore maggiore o uguale a &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNOmcxwLEe-urICxG0GjCg" name="ERRORE_STRINGA_VUOTA" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNOmdBwLEe-urICxG0GjCg" value="&quot;Attenzione: non hai inserito alcun carattere&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNPNgRwLEe-urICxG0GjCg" name="ERRORE_MASSIMO" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNPNghwLEe-urICxG0GjCg" value="&quot;Attenzione: e' richiesto un valore minore o uguale a &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNPNhBwLEe-urICxG0GjCg" name="MESSAGGIO_AMMISSIBILI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNP0kBwLEe-urICxG0GjCg" value="&quot;Attenzione: i caratteri ammissibili sono: &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNP0khwLEe-urICxG0GjCg" name="RISPOSTA_SI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNP0kxwLEe-urICxG0GjCg" value="'S'"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNQboRwLEe-urICxG0GjCg" name="RISPOSTA_NO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNQbohwLEe-urICxG0GjCg" value="'N'"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNo2IBwLEe-urICxG0GjCg" name="creaScanner" specification="_DJCC8BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNo2IRwLEe-urICxG0GjCg" type="_DMu3MBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>Scanner creato = new Scanner(System.in);
	   creato.useDelimiter(System.getProperty(&quot;line.separator&quot;));
	   return creato;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNpdMBwLEe-urICxG0GjCg" name="leggiStringa" specification="_DJCC8RwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNpdMRwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNpdMhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.print(messaggio);
		  return lettore.next();
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNpdMxwLEe-urICxG0GjCg" name="leggiStringaNonVuota" specification="_DJCqARwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNpdNBwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNpdNRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito=false;
	   String lettura = null;
	   do
	   {
		 lettura = leggiStringa(messaggio);
		 lettura = lettura.trim();
		 if (lettura.length() > 0)
		  finito=true;
		 else
		  System.out.println(ERRORE_STRINGA_VUOTA);
	   } while (!finito);
	   
	   return lettura;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNpdNhwLEe-urICxG0GjCg" name="leggiChar" specification="_DJDREBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNpdNxwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNpdOBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   char valoreLetto = '\0';
	   do
	    {
	     System.out.print(messaggio);
	     String lettura = lettore.next();
	     if (lettura.length() > 0)
	      {
	       valoreLetto = lettura.charAt(0);
	       finito = true;
	      }
	     else
	      {
	       System.out.println(ERRORE_STRINGA_VUOTA);
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNpdORwLEe-urICxG0GjCg" name="leggiUpperChar" specification="_DJD4IBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNpdOhwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNpdOxwLEe-urICxG0GjCg" name="ammissibili">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNpdPBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   char valoreLetto = '\0';
	   do
	   {
	    valoreLetto = leggiChar(messaggio);
	    valoreLetto = Character.toUpperCase(valoreLetto);
	    if (ammissibili.indexOf(valoreLetto) != -1)
		 finito  = true;
	    else
	     System.out.println(MESSAGGIO_AMMISSIBILI + ammissibili);
	   } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNpdPRwLEe-urICxG0GjCg" name="leggiIntero" specification="_DJD4JBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNpdPhwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNpdPxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     System.out.print(messaggio);
	     try
	      {
	       valoreLetto = lettore.nextInt();
	       finito = true;
	      }
	     catch (InputMismatchException e)
	      {
	       System.out.println(ERRORE_FORMATO);
        lettore.nextLine();
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNqEQBwLEe-urICxG0GjCg" name="leggiInteroConMinimo" specification="_DJEfMhwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNqEQRwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqEQhwLEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqEQxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiIntero(messaggio);
	     if (valoreLetto >= minimo)
	      finito = true;
	     else
	      System.out.println(ERRORE_MINIMO + minimo);
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNqERBwLEe-urICxG0GjCg" name="leggiInteroRange" specification="_DJFGQRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNqERRwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqERhwLEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqERxwLEe-urICxG0GjCg" name="massimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqESBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   int valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiIntero(messaggio);
	     if (valoreLetto >= minimo &amp;&amp; valoreLetto&lt;= massimo)
	      finito = true;
	     else
	      if (valoreLetto &lt; minimo)
	         System.out.println(ERRORE_MINIMO + minimo);
	      else
	    	 System.out.println(ERRORE_MASSIMO + massimo); 
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNqESRwLEe-urICxG0GjCg" name="leggiDouble" specification="_DJFtUBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNqEShwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqESxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   double valoreLetto = 0;
	   do
	    {
	     System.out.print(messaggio);
	     try
	      {
	       valoreLetto = lettore.nextDouble();
	       finito = true;
	      }
	     catch (InputMismatchException e)
	      {
	       System.out.println(ERRORE_FORMATO);
	       lettore.nextLine();
	      }
	    } while (!finito);
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNqrUBwLEe-urICxG0GjCg" name="leggiDoubleConMinimo" specification="_DJFtUxwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNqrURwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqrUhwLEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqrUxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean finito = false;
	   double valoreLetto = 0;
	   do
	    {
	     valoreLetto = leggiDouble(messaggio);
	     if (valoreLetto >= minimo)
	      finito = true;
	     else
	      System.out.println(ERRORE_MINIMO + minimo);
	    } while (!finito);
	     
	   return valoreLetto;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNqrVBwLEe-urICxG0GjCg" name="yesOrNo" specification="_DJGUYhwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNqrVRwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNqrVhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>String mioMessaggio = messaggio + &quot;(&quot;+RISPOSTA_SI+&quot;/&quot;+RISPOSTA_NO+&quot;) &quot;;
		  char valoreLetto = leggiUpperChar(mioMessaggio,String.valueOf(RISPOSTA_SI)+String.valueOf(RISPOSTA_NO));
		  
		  if (valoreLetto == RISPOSTA_SI)
			return true;
		  else
			return false;
	  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DJCC8BwLEe-urICxG0GjCg" name="creaScanner" visibility="private" isStatic="true" method="_DNo2IBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DMwFUBwLEe-urICxG0GjCg" type="_DMu3MBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DJCC8RwLEe-urICxG0GjCg" name="leggiStringa" isStatic="true" method="_DNpdMBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj0BwLEe-urICxG0GjCg">
                  <body>Metodo per leggere una stringa inserita dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return La stringa inserita dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJCC8hwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJCqABwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJCqARwLEe-urICxG0GjCg" name="leggiStringaNonVuota" isStatic="true" method="_DNpdMxwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj0RwLEe-urICxG0GjCg">
                  <body>Metodo per leggere una stringa inserita dall'utente, che non deve essere vuota.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return La stringa inserita dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJCqAhwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJCqAxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJDREBwLEe-urICxG0GjCg" name="leggiChar" isStatic="true" method="_DNpdNhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj0hwLEe-urICxG0GjCg">
                  <body>Metodo per leggere un carattere inserito dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return Il carattere inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJDRERwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJDREhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJD4IBwLEe-urICxG0GjCg" name="leggiUpperChar" isStatic="true" method="_DNpdORwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj0xwLEe-urICxG0GjCg">
                  <body>Metodo per leggere un carattere inserito dall'utente, convertendolo in maiuscolo.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param ammissibili Stringa contenente i caratteri ammissibili
	   * @return Il carattere inserito dall'utente, convertito in maiuscolo</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJD4IRwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJD4IhwLEe-urICxG0GjCg" name="ammissibili">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJD4IxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJD4JBwLEe-urICxG0GjCg" name="leggiIntero" isStatic="true" method="_DNpdPRwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj1BwLEe-urICxG0GjCg">
                  <body>Metodo per leggere un intero inserito dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return L'intero inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJEfMBwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJEfMRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJEfMhwLEe-urICxG0GjCg" name="leggiInteroConMinimo" isStatic="true" method="_DNqEQBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj1RwLEe-urICxG0GjCg">
                  <body>Metodo per leggere un intero inserito dall'utente, con un valore minimo specificato.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param minimo Il valore minimo ammesso per l'intero inserito
	   * @return L'intero inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJEfMxwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJEfNBwLEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJFGQBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJFGQRwLEe-urICxG0GjCg" name="leggiInteroRange" isStatic="true" method="_DNqERBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj1hwLEe-urICxG0GjCg">
                  <body>Metodo per leggere un intero inserito dall'utente, compreso tra un valore minimo e un valore massimo specificati.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param minimo Il valore minimo ammesso per l'intero inserito
	   * @param massimo Il valore massimo ammesso per l'intero inserito
	   * @return L'intero inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJFGQhwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJFGQxwLEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJFGRBwLEe-urICxG0GjCg" name="massimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJFGRRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJFtUBwLEe-urICxG0GjCg" name="leggiDouble" isStatic="true" method="_DNqESRwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj1xwLEe-urICxG0GjCg">
                  <body>Metodo per leggere un numero decimale (double) inserito dall'utente.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @return Il numero decimale inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJFtURwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJFtUhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJFtUxwLEe-urICxG0GjCg" name="leggiDoubleConMinimo" isStatic="true" method="_DNqrUBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj2BwLEe-urICxG0GjCg">
                  <body>Metodo per leggere un numero decimale (double) inserito dall'utente, con un valore minimo specificato.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di input
	   * @param minimo Il valore minimo ammesso per il numero decimale inserito
	   * @return Il numero decimale inserito dall'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJFtVBwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJGUYBwLEe-urICxG0GjCg" name="minimo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJGUYRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DJGUYhwLEe-urICxG0GjCg" name="yesOrNo" isStatic="true" method="_DNqrVBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNvj2RwLEe-urICxG0GjCg">
                  <body>Metodo per chiedere all'utente una conferma (risposta Sì o No) tramite input.
	   * 
	   * @param messaggio Il messaggio da visualizzare prima della richiesta di conferma
	   * @return True se l'utente risponde &quot;Sì&quot;, False se l'utente risponde &quot;No&quot;</body>
                </ownedComment>
                <ownedParameter xmi:id="_DJGUYxwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DJGUZBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN4twBwLEe-urICxG0GjCg" name="" memberEnd="_DN4twRwLEe-urICxG0GjCg _DMzIoBwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN4twRwLEe-urICxG0GjCg" name="" type="_DHkqYBwLEe-urICxG0GjCg" association="_DN4twBwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DOBQoRwLEe-urICxG0GjCg" name="" memberEnd="_DOBQohwLEe-urICxG0GjCg _DNNYUBwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DOBQohwLEe-urICxG0GjCg" name="" type="_DJA00BwLEe-urICxG0GjCg" association="_DOBQoRwLEe-urICxG0GjCg"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_DGP0sBwLEe-urICxG0GjCg" name="ids">
          <packagedElement xmi:type="uml:Package" xmi:id="_DGP0sRwLEe-urICxG0GjCg" name="progetto">
            <packagedElement xmi:type="uml:Package" xmi:id="_DGQbwBwLEe-urICxG0GjCg" name="news">
              <packagedElement xmi:type="uml:Package" xmi:id="_DGRC0BwLEe-urICxG0GjCg" name="ecccezioni">
                <packagedElement xmi:type="uml:Class" xmi:id="_DHtNQBwLEe-urICxG0GjCg" name="RootTreeException">
                  <ownedComment xmi:id="_DNr5cBwLEe-urICxG0GjCg">
                    <body>Eccezione personalizzata per gestire il caso in cui un nodo 
non radice tenti di essere inserito in testa ad un albero,
il che non è consentito.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                  </ownedComment>
                  <generalization xmi:id="_DMb8QRwLEe-urICxG0GjCg" general="_DMbVMRwLEe-urICxG0GjCg"/>
                  <ownedAttribute xmi:id="_DM0WwRwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM0WwhwLEe-urICxG0GjCg" value="1L"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNaztBwLEe-urICxG0GjCg" name="RootTreeException" specification="_DHt0UBwLEe-urICxG0GjCg">
                    <ownedParameter xmi:id="_DNaztRwLEe-urICxG0GjCg" type="_DHtNQBwLEe-urICxG0GjCg" direction="return"/>
                    <language>java</language>
                    <body>super(&quot;Il nodo in testa all'albero deve essere radice&quot;);
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_DHt0UBwLEe-urICxG0GjCg" name="RootTreeException" method="_DNaztBwLEe-urICxG0GjCg">
                    <eAnnotations xmi:id="_DHt0URwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_DHt0UhwLEe-urICxG0GjCg" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_DHt0UxwLEe-urICxG0GjCg" type="_DHtNQBwLEe-urICxG0GjCg" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_DIQm4BwLEe-urICxG0GjCg" name="LeafHasChildrenException">
                  <ownedComment xmi:id="_DNsgiRwLEe-urICxG0GjCg">
                    <body>Eccezione personalizzata per gestire il caso in cui una foglia 
tenti di aggiungere figli, il che non è consentito.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                  </ownedComment>
                  <generalization xmi:id="_DMltQBwLEe-urICxG0GjCg" general="_DMbVMRwLEe-urICxG0GjCg"/>
                  <ownedAttribute xmi:id="_DM-u0xwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM-u1BwLEe-urICxG0GjCg" value="1L"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfsMBwLEe-urICxG0GjCg" name="LeafHasChildrenException" specification="_DIRN8BwLEe-urICxG0GjCg">
                    <ownedParameter xmi:id="_DNfsMRwLEe-urICxG0GjCg" type="_DIQm4BwLEe-urICxG0GjCg" direction="return"/>
                    <language>java</language>
                    <body>super(&quot;Le foglie non possono avere figli&quot;);
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_DIRN8BwLEe-urICxG0GjCg" name="LeafHasChildrenException" method="_DNfsMBwLEe-urICxG0GjCg">
                    <eAnnotations xmi:id="_DIRN8RwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_DIRN8hwLEe-urICxG0GjCg" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_DIRN8xwLEe-urICxG0GjCg" type="_DIQm4BwLEe-urICxG0GjCg" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_DIzZcBwLEe-urICxG0GjCg" name="ConfLoginFailException">
                  <ownedComment xmi:id="_DNuVuhwLEe-urICxG0GjCg">
                    <body>Eccezione personalizzata per gestire il caso 
in cui un tentativo di login da parte di un configuratore 
fallisca a causa di credenziali errate.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                  </ownedComment>
                  <generalization xmi:id="_DMqlwBwLEe-urICxG0GjCg" general="_DMbVMRwLEe-urICxG0GjCg"/>
                  <ownedAttribute xmi:id="_DNH4wBwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNH4wRwLEe-urICxG0GjCg" value="1L"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNj9ohwLEe-urICxG0GjCg" name="ConfLoginFailException" specification="_DI0AgBwLEe-urICxG0GjCg">
                    <ownedParameter xmi:id="_DNj9oxwLEe-urICxG0GjCg" type="_DIzZcBwLEe-urICxG0GjCg" direction="return"/>
                    <language>java</language>
                    <body>// Richiama il costruttore della superclasse Exception e imposta un messaggio di errore predefinito
     super(&quot;Credenziali di accesso del configuratore non valide!&quot;);
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_DI0AgBwLEe-urICxG0GjCg" name="ConfLoginFailException" method="_DNj9ohwLEe-urICxG0GjCg">
                    <eAnnotations xmi:id="_DI0AgRwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_DI0AghwLEe-urICxG0GjCg" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_DI0AgxwLEe-urICxG0GjCg" type="_DIzZcBwLEe-urICxG0GjCg" direction="return"/>
                  </ownedOperation>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_DIZw0BwLEe-urICxG0GjCg" name="Albero">
                <ownedComment xmi:id="_DNtHlhwLEe-urICxG0GjCg">
                  <body>Questa classe rappresenta un albero gerarchico, composto da nodi, utilizzato per la gestione delle notizie.
Ogni albero ha una radice, foglie e un utente associato.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                </ownedComment>
                <ownedAttribute xmi:id="_DNAkARwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNBLEBwLEe-urICxG0GjCg" value="1L"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNBLERwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN8YJBwLEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_DNBLEhwLEe-urICxG0GjCg" name="foglie" type="_DL3UgBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN8_MRwLEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_DNByIRwLEe-urICxG0GjCg" name="utente" type="_DIR1ABwLEe-urICxG0GjCg" association="_DNtuoBwLEe-urICxG0GjCg"/>
                <interfaceRealization xmi:id="_DMnicBwLEe-urICxG0GjCg" client="_DIZw0BwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNg6UxwLEe-urICxG0GjCg" name="Albero" specification="_DMHzMBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNg6VBwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_DNg6VRwLEe-urICxG0GjCg" type="_DIZw0BwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>if (radice.root()!=null) throw new RootTreeException();
     this.foglie = new ArrayList&lt;Nodo>();
     this.radice = radice;
     addFoglie(radice);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNg6VhwLEe-urICxG0GjCg" name="addFoglie" specification="_DMIaQhwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNg6VxwLEe-urICxG0GjCg" name="albero" type="_DI0nkBwLEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>if (albero.isLeaf()) 
         foglie.add(albero);
     else {
         for (Nodo child : albero.getChildren()) {
             addFoglie(child);
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNg6WBwLEe-urICxG0GjCg" name="toString" specification="_DIa-8BwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNg6WRwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer bf = new StringBuffer();
     iterative(bf, this.radice, 1);
     return bf.toString();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNg6WhwLEe-urICxG0GjCg" name="iterative" specification="_DMowkRwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNg6WxwLEe-urICxG0GjCg" name="bf" type="_DMoJgBwLEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_DNg6XBwLEe-urICxG0GjCg" name="nodo" type="_DI0nkBwLEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_DNg6XRwLEe-urICxG0GjCg" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String asterischi = &quot;*&quot;.repeat(depth); // Genera una stringa di asterischi in base al grado di &quot;figlio di&quot;
     String blank = &quot; &quot;.repeat(depth + 1);
     if (nodo.isLeaf()) {
         bf.append(asterischi + &quot; &quot; + nodo.getNome());
     } else {
         bf.append(asterischi + nodo.toString(blank));
         for (Nodo nodoChild : nodo.getChildren()) {
             bf.append(&quot;\n&quot;);
             iterative(bf, nodoChild, depth + 1);
         }
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DIa-8BwLEe-urICxG0GjCg" name="toString" method="_DNg6WBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DIbmABwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DMHzMBwLEe-urICxG0GjCg" name="Albero" method="_DNg6UxwLEe-urICxG0GjCg" raisedException="_DHtNQBwLEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_DMHzMhwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DMIaQBwLEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DMHzMRwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_DMIaQRwLEe-urICxG0GjCg" type="_DIZw0BwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DMIaQhwLEe-urICxG0GjCg" name="addFoglie" visibility="private" method="_DNg6VhwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DMIaQxwLEe-urICxG0GjCg" name="albero" type="_DI0nkBwLEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DMowkRwLEe-urICxG0GjCg" name="iterative" visibility="private" isStatic="true" method="_DNg6WhwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DMowkhwLEe-urICxG0GjCg" name="bf" type="_DMoJgBwLEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_DMowkxwLEe-urICxG0GjCg" name="nodo" type="_DI0nkBwLEe-urICxG0GjCg"/>
                  <ownedParameter xmi:id="_DMowlBwLEe-urICxG0GjCg" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_DIeCQBwLEe-urICxG0GjCg" name="DefaultInitializer">
                <ownedComment xmi:id="_DNtuohwLEe-urICxG0GjCg">
                  <body>Classe per l'inizializzazione predefinita del sistema.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                </ownedComment>
                <ownedAttribute xmi:id="_DNByIhwLEe-urICxG0GjCg" name="FACTOR_VAL" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNCZMBwLEe-urICxG0GjCg" value="2"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNCZMRwLEe-urICxG0GjCg" name="ROOT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNCZMhwLEe-urICxG0GjCg" value="&quot;system&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNCZMxwLEe-urICxG0GjCg" name="ROOT_FIELD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNCZNBwLEe-urICxG0GjCg" value="&quot;field&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNCZNRwLEe-urICxG0GjCg" name="ROOT_DOMAIN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DNCZNhwLEe-urICxG0GjCg" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNDAQRwLEe-urICxG0GjCg" value="{&quot;rootchildM&quot;, &quot;rootchildF&quot;}"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNDAQhwLEe-urICxG0GjCg" name="CHILD2_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNDAQxwLEe-urICxG0GjCg" value="&quot;rootchild2&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNDARBwLEe-urICxG0GjCg" name="CHILD1_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNDARRwLEe-urICxG0GjCg" value="&quot;rootchild1&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNDnUBwLEe-urICxG0GjCg" name="DEFAULT_NAME_COMMUNITY_0" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNDnURwLEe-urICxG0GjCg" value="&quot;C0&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNDnUhwLEe-urICxG0GjCg" name="DEFAULT_COMMUNITY_1" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNDnUxwLEe-urICxG0GjCg" value="&quot;Comune1&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNDnVBwLEe-urICxG0GjCg" name="DEFAULT_COMMUNITY_2" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNDnVRwLEe-urICxG0GjCg" value="&quot;Comune2&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNDnVhwLEe-urICxG0GjCg" name="DEFAULT_COMMUNITY_3" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNDnVxwLEe-urICxG0GjCg" value="&quot;Comune3&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNEOYBwLEe-urICxG0GjCg" name="DEFAULT_USERNAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNEOYRwLEe-urICxG0GjCg" value="&quot;admin&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNEOYhwLEe-urICxG0GjCg" name="DEFAULT_PASSWORD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNEOYxwLEe-urICxG0GjCg" value="&quot;admin&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNEOZBwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg" isReadOnly="true" association="_DN9mQRwLEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_DNE1cBwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN9mRBwLEe-urICxG0GjCg"/>
                <ownedAttribute xmi:id="_DNE1cRwLEe-urICxG0GjCg" name="geografia" type="_DIvIABwLEe-urICxG0GjCg" isReadOnly="true" association="_DN-NURwLEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNhhYBwLEe-urICxG0GjCg" name="DefaultInitializer" specification="_DIfQYBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNhhYRwLEe-urICxG0GjCg" type="_DIeCQBwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>this.utenza = defaultAccess();
     this.gerarchia = defaultTree();
     this.geografia = defaultWorld();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNhhYhwLEe-urICxG0GjCg" name="defaultTree" specification="_DIf3cBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNhhYxwLEe-urICxG0GjCg" type="_DIGO0BwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>Gerarchia gerarchia = new Gerarchia();

     // Creazione del nodo radice
     Nodo nodo1 = new Nodo(ROOT_NAME, null, ROOT_FIELD);
     for (String domainValue : ROOT_DOMAIN) {
         nodo1.addElementiDominio(domainValue);
     }

     // Creazione dei nodi figli
     Nodo nodo11 = new Nodo(CHILD1_NAME, nodo1.getNome());
     Nodo nodo12 = new Nodo(CHILD2_NAME, nodo1.getNome());
     try {
         nodo1.addChild(nodo11);
         nodo1.addChild(nodo12);


         // Aggiunta dei nodi all'albero e definizione dei fattori di conversione
         nodo11.addFattoreConversione(nodo12, FACTOR_VAL);
         nodo12.addFattoreConversione(nodo11, 1/FACTOR_VAL);
         Albero albero = new Albero(nodo1);
         
         albero.setUtente(utenza.autenticazioneConfiguratore(DEFAULT_USERNAME, DEFAULT_PASSWORD));
         gerarchia.addAlbero(albero);
     


     } catch (Exception e) {
         System.out.println(e.getMessage());
     }
     
     return gerarchia;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNhhZBwLEe-urICxG0GjCg" name="defaultAccess" specification="_DIf3cRwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNhhZRwLEe-urICxG0GjCg" type="_DIWGcBwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>Utenza utenza = new Utenza();

     // Creazione delle credenziali di default per l'utente admin
     Credenziali cred = new Credenziali(DEFAULT_USERNAME, DEFAULT_PASSWORD);
     cred.setDefinitive(true);
     Configuratore utente = new Configuratore(cred);
     utenza.addUtente(utente);
     
     return utenza;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNhhZhwLEe-urICxG0GjCg" name="defaultComprensorio" specification="_DIgegBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNhhZxwLEe-urICxG0GjCg" type="_DH8d0BwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>Comprensorio comprensorio = new Comprensorio(DEFAULT_NAME_COMMUNITY_0);
     comprensorio.addComune(DEFAULT_COMMUNITY_1);
     comprensorio.addComune(DEFAULT_COMMUNITY_2);
     comprensorio.addComune(DEFAULT_COMMUNITY_3);
     return comprensorio;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNhhaBwLEe-urICxG0GjCg" name="defaultWorld" specification="_DIhFkBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNhhaRwLEe-urICxG0GjCg" type="_DIvIABwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>Geografia geografia = new Geografia();
     geografia.addComprensorio(defaultComprensorio());
     return geografia;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DIfQYBwLEe-urICxG0GjCg" name="DefaultInitializer" method="_DNhhYBwLEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_DIfQYRwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DIfQYhwLEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DIfQYxwLEe-urICxG0GjCg" type="_DIeCQBwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DIf3cBwLEe-urICxG0GjCg" name="defaultTree" method="_DNhhYhwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DMKPcBwLEe-urICxG0GjCg" type="_DIGO0BwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DIf3cRwLEe-urICxG0GjCg" name="defaultAccess" method="_DNhhZBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DMKPcRwLEe-urICxG0GjCg" type="_DIWGcBwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DIgegBwLEe-urICxG0GjCg" name="defaultComprensorio" visibility="private" method="_DNhhZhwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DMKPchwLEe-urICxG0GjCg" type="_DH8d0BwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DIhFkBwLEe-urICxG0GjCg" name="defaultWorld" method="_DNhhaBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DMKPcxwLEe-urICxG0GjCg" type="_DIvIABwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_DIjh0BwLEe-urICxG0GjCg" name="FileManager">
                <ownedComment xmi:id="_DNtuoxwLEe-urICxG0GjCg">
                  <body>DataManager è una classe utilizzata per gestire il caricamento e il salvataggio dei dati da e verso file di testo.
Supporta il caricamento e il salvataggio di oggetti delle classi Gerarchia, Geografia e Utenza.

@author Daniele Martinelli
@author Federico Sabbadini</body>
                </ownedComment>
                <ownedAttribute xmi:id="_DNE1chwLEe-urICxG0GjCg" name="SAVE_G_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNFcgBwLEe-urICxG0GjCg" value="&quot;Errore durante il salvataggio della gerarchia su file: &quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNFcgRwLEe-urICxG0GjCg" name="SAVE_U_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNFcghwLEe-urICxG0GjCg" value="&quot;Errore durante il salvataggio dell' utenza su file: &quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNFcgxwLEe-urICxG0GjCg" name="SAVE_GE_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNFchBwLEe-urICxG0GjCg" value="&quot;Errore durante il salvataggio della geografia su file: &quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNFchRwLEe-urICxG0GjCg" name="UPLOAD_U_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNFchhwLEe-urICxG0GjCg" value="&quot;Errore durante il caricamento dell' utenza: &quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNGDkBwLEe-urICxG0GjCg" name="UPLOAD_G_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNGDkRwLEe-urICxG0GjCg" value="&quot;Errore durante il caricamento della gerarchia: &quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNGDkhwLEe-urICxG0GjCg" name="UPLOAD_GE_ERR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNGDkxwLEe-urICxG0GjCg" value="&quot;Errore durante il caricamento della geografia: &quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNGDlBwLEe-urICxG0GjCg" name="UTENZA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNGDlRwLEe-urICxG0GjCg" value="&quot;utenza.txt&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNGDlhwLEe-urICxG0GjCg" name="GERARCHIA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNGqoBwLEe-urICxG0GjCg" value="&quot;gerarchia.txt&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNGqoRwLEe-urICxG0GjCg" name="GEOGRAFIA_FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNGqohwLEe-urICxG0GjCg" value="&quot;geografia.txt&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNiIcBwLEe-urICxG0GjCg" name="getGerarchiaFile" specification="_DIkv8BwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNiIcRwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return GERARCHIA_FILE;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNiIchwLEe-urICxG0GjCg" name="getUtenzaFile" specification="_DIlXABwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNiIcxwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UTENZA_FILE;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNiIdBwLEe-urICxG0GjCg" name="getGeografiaFile" specification="_DIlXAhwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNiIdRwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return GEOGRAFIA_FILE;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNiIdhwLEe-urICxG0GjCg" name="caricaGerarchia" specification="_DIl-ERwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNiIdxwLEe-urICxG0GjCg" type="_DIGO0BwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getGerarchiaFile()))) {
         return (Gerarchia) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_G_ERR + e.getMessage());
         return null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNiIeBwLEe-urICxG0GjCg" name="salvaSuFile" specification="_DMMEoRwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNiIeRwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getGerarchiaFile()))) {
         outputStream.writeObject(gerarchia);
     } catch (IOException e) {
         System.err.println(SAVE_G_ERR + e.getMessage());
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNivgBwLEe-urICxG0GjCg" name="caricaUtenza" specification="_DImlIBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNivgRwLEe-urICxG0GjCg" type="_DIWGcBwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getUtenzaFile()))) {
         return (Utenza) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_U_ERR + e.getMessage());
         return null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNivghwLEe-urICxG0GjCg" name="salvaSuFile" specification="_DMMEpBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNivgxwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getUtenzaFile()))) {
         outputStream.writeObject(utenza);
     } catch (IOException e) {
         System.err.println(SAVE_U_ERR + e.getMessage());
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNivhBwLEe-urICxG0GjCg" name="caricaGeografia" specification="_DImlIRwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNivhRwLEe-urICxG0GjCg" type="_DIvIABwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>try (ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(getGeografiaFile()))) {
         return (Geografia) inputStream.readObject();
     } catch (IOException | ClassNotFoundException e) {
         System.err.println(UPLOAD_GE_ERR + e.getMessage());
         return null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNivhhwLEe-urICxG0GjCg" name="salvaSuFile" specification="_DMMrsRwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNivhxwLEe-urICxG0GjCg" name="geografia" type="_DIvIABwLEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>try (ObjectOutputStream outputStream = new ObjectOutputStream(new FileOutputStream(getGeografiaFile()))) {
         outputStream.writeObject(geografia);
     } catch (IOException e) {
         System.err.println(SAVE_GE_ERR + e.getMessage());
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DIkv8BwLEe-urICxG0GjCg" name="getGerarchiaFile" isStatic="true" method="_DNiIcBwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVsBwLEe-urICxG0GjCg">
                    <body>Restituisce il percorso del file utilizzato per la memorizzazione della gerarchia.
     * 
     * @return Il percorso del file della gerarchia</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DIkv8RwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DIlXABwLEe-urICxG0GjCg" name="getUtenzaFile" isStatic="true" method="_DNiIchwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVsRwLEe-urICxG0GjCg">
                    <body>Restituisce il percorso del file utilizzato per la memorizzazione dell' utenza.
     * 
     * @return Il percorso del file delL' utenza</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DIlXARwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DIlXAhwLEe-urICxG0GjCg" name="getGeografiaFile" isStatic="true" method="_DNiIdBwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVshwLEe-urICxG0GjCg">
                    <body>Restituisce il percorso del file utilizzato per la memorizzazione della geografia.
     * 
     * @return Il percorso del file della geografia</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DIl-EBwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DIl-ERwLEe-urICxG0GjCg" name="caricaGerarchia" isStatic="true" method="_DNiIdhwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVsxwLEe-urICxG0GjCg">
                    <body>Carica la gerarchia da un file di testo.
     * 
     * @return La gerarchia caricata, null in caso di errore durante il caricamento.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DMMEoBwLEe-urICxG0GjCg" type="_DIGO0BwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DImlIBwLEe-urICxG0GjCg" name="caricaUtenza" isStatic="true" method="_DNivgBwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVtRwLEe-urICxG0GjCg">
                    <body>Carica l' utenza da un file di testo.
     * 
     * @return L' utenza caricata, null in caso di errore durante il caricamento.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DMMEoxwLEe-urICxG0GjCg" type="_DIWGcBwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DImlIRwLEe-urICxG0GjCg" name="caricaGeografia" isStatic="true" method="_DNivhBwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVtxwLEe-urICxG0GjCg">
                    <body>Carica la geografia da un file di testo.
     * 
     * @return La geografia caricata, null in caso di errore durante il caricamento.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DMMrsBwLEe-urICxG0GjCg" type="_DIvIABwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DMMEoRwLEe-urICxG0GjCg" name="salvaSuFile" isStatic="true" method="_DNiIeBwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVtBwLEe-urICxG0GjCg">
                    <body>Salva la gerarchia su un file di testo.
     * 
     * @param gerarchia La gerarchia da salvare.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DMMEohwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DMMEpBwLEe-urICxG0GjCg" name="salvaSuFile" isStatic="true" method="_DNivghwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVthwLEe-urICxG0GjCg">
                    <body>Salva l' utenza su un file di testo.
     * 
     * @param gestioneUtenza L' utenza da salvare.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DMMEpRwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DMMrsRwLEe-urICxG0GjCg" name="salvaSuFile" isStatic="true" method="_DNivhhwLEe-urICxG0GjCg">
                  <ownedComment xmi:id="_DNuVuBwLEe-urICxG0GjCg">
                    <body>Salva la geografia su un file di testo.
     * 
     * @param geografia La geografia da salvare.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DMMrshwLEe-urICxG0GjCg" name="geografia" type="_DIvIABwLEe-urICxG0GjCg"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_DIvIABwLEe-urICxG0GjCg" name="Geografia">
                <ownedComment xmi:id="_DNuVuRwLEe-urICxG0GjCg">
                  <body>La classe Geografia rappresenta l'insieme di 
tutti i comprensori del sistema

@author Daniele Martinelli
@author Federico Sabbadini</body>
                </ownedComment>
                <ownedAttribute xmi:id="_DNGqoxwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNGqpBwLEe-urICxG0GjCg" value="1L"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DNHRsBwLEe-urICxG0GjCg" name="geografia" type="_DL3UgBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN-0YRwLEe-urICxG0GjCg"/>
                <interfaceRealization xmi:id="_DMp-sBwLEe-urICxG0GjCg" client="_DIvIABwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNjWkBwLEe-urICxG0GjCg" name="Geografia" specification="_DIwWIBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNjWkRwLEe-urICxG0GjCg" type="_DIvIABwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>this.geografia = new ArrayList&lt;>();
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNjWkhwLEe-urICxG0GjCg" name="addComprensorio" specification="_DMNSwBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNjWkxwLEe-urICxG0GjCg" name="comprensorio" type="_DH8d0BwLEe-urICxG0GjCg"/>
                  <language>java</language>
                  <body>this.geografia.add(comprensorio);
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNjWlBwLEe-urICxG0GjCg" name="cercaComprensorio" specification="_DIwWJBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNjWlRwLEe-urICxG0GjCg" name="nome">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DNjWlhwLEe-urICxG0GjCg" type="_DH8d0BwLEe-urICxG0GjCg" direction="return"/>
                  <language>java</language>
                  <body>for (Comprensorio comprensorio : geografia) {
			if (comprensorio.getNome().equals(nome))
				return comprensorio;
		}
		return null;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNjWlxwLEe-urICxG0GjCg" name="verificaEsistenzaComprensorio" specification="_DIw9MRwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNjWmBwLEe-urICxG0GjCg" name="nome">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DNjWmRwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (cercaComprensorio(nome) == null)
			return false;
		return true;
	</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNj9oBwLEe-urICxG0GjCg" name="toString" specification="_DIxkQBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DNj9oRwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuffer bf = new StringBuffer();
		int num = 0;
		for (Comprensorio comprensorio : geografia) {
			bf.append(&quot;C&quot; + num + &quot;\n&quot;);
			bf.append(comprensorio.toString());
			bf.append(&quot;\n&quot;);
			num++;
		}
		
		return bf.toString();
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DIwWIBwLEe-urICxG0GjCg" name="Geografia" method="_DNjWkBwLEe-urICxG0GjCg">
                  <eAnnotations xmi:id="_DIwWIRwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DIwWIhwLEe-urICxG0GjCg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DIwWIxwLEe-urICxG0GjCg" type="_DIvIABwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DIwWJBwLEe-urICxG0GjCg" name="cercaComprensorio" method="_DNjWlBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DIw9MBwLEe-urICxG0GjCg" name="nome">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DMN50RwLEe-urICxG0GjCg" type="_DH8d0BwLEe-urICxG0GjCg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DIw9MRwLEe-urICxG0GjCg" name="verificaEsistenzaComprensorio" method="_DNjWlxwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DIw9MhwLEe-urICxG0GjCg" name="nome">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DIw9MxwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DIxkQBwLEe-urICxG0GjCg" name="toString" method="_DNj9oBwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DIxkQRwLEe-urICxG0GjCg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DMNSwBwLEe-urICxG0GjCg" name="addComprensorio" method="_DNjWkhwLEe-urICxG0GjCg">
                  <ownedParameter xmi:id="_DMN50BwLEe-urICxG0GjCg" name="comprensorio" type="_DH8d0BwLEe-urICxG0GjCg"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_DNtuoBwLEe-urICxG0GjCg" name="" memberEnd="_DNByIRwLEe-urICxG0GjCg _DNtuoRwLEe-urICxG0GjCg">
                <ownedEnd xmi:id="_DNtuoRwLEe-urICxG0GjCg" name="" type="_DIZw0BwLEe-urICxG0GjCg" association="_DNtuoBwLEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_DN8YJBwLEe-urICxG0GjCg" name="" memberEnd="_DN8YJRwLEe-urICxG0GjCg _DNBLERwLEe-urICxG0GjCg">
                <ownedEnd xmi:id="_DN8YJRwLEe-urICxG0GjCg" name="" type="_DIZw0BwLEe-urICxG0GjCg" association="_DN8YJBwLEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_DN8_MRwLEe-urICxG0GjCg" name="" memberEnd="_DN8_MhwLEe-urICxG0GjCg _DNBLEhwLEe-urICxG0GjCg">
                <ownedEnd xmi:id="_DN8_MhwLEe-urICxG0GjCg" name="" type="_DIZw0BwLEe-urICxG0GjCg" association="_DN8_MRwLEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_DN9mQRwLEe-urICxG0GjCg" name="" memberEnd="_DN9mQhwLEe-urICxG0GjCg _DNEOZBwLEe-urICxG0GjCg">
                <ownedEnd xmi:id="_DN9mQhwLEe-urICxG0GjCg" name="" type="_DIeCQBwLEe-urICxG0GjCg" association="_DN9mQRwLEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_DN9mRBwLEe-urICxG0GjCg" name="" memberEnd="_DN9mRRwLEe-urICxG0GjCg _DNE1cBwLEe-urICxG0GjCg">
                <ownedEnd xmi:id="_DN9mRRwLEe-urICxG0GjCg" name="" type="_DIeCQBwLEe-urICxG0GjCg" association="_DN9mRBwLEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_DN-NURwLEe-urICxG0GjCg" name="" memberEnd="_DN-NUhwLEe-urICxG0GjCg _DNE1cRwLEe-urICxG0GjCg">
                <ownedEnd xmi:id="_DN-NUhwLEe-urICxG0GjCg" name="" type="_DIeCQBwLEe-urICxG0GjCg" association="_DN-NURwLEe-urICxG0GjCg"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_DN-0YRwLEe-urICxG0GjCg" name="" memberEnd="_DN-0YhwLEe-urICxG0GjCg _DNHRsBwLEe-urICxG0GjCg">
                <ownedEnd xmi:id="_DN-0YhwLEe-urICxG0GjCg" name="" type="_DIvIABwLEe-urICxG0GjCg" association="_DN-0YRwLEe-urICxG0GjCg"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DHys0BwLEe-urICxG0GjCg" name="Application">
              <ownedComment xmi:id="_DNr5dRwLEe-urICxG0GjCg">
                <body>Questa classe contiene i metodi statici 
necessari all'esecuzione del sistema

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM2zARwLEe-urICxG0GjCg" name="NUM_MAX_TENTATIVI" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM2zAhwLEe-urICxG0GjCg" value="3"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNbawxwLEe-urICxG0GjCg" name="registrazione" specification="_DL4ioBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNbaxBwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>Configuratore configuratore = new Configuratore();
     String id = configuratore.getID();
     String psswd = configuratore.getPassword();
     System.out.println(&quot;ID di default: &quot; + id);
     System.out.println(&quot;Password di default: &quot; + psswd);

     Credenziali credenziali = new Credenziali(id, psswd);
     configuratore.setCredenziali(credenziali);
     configuratore.setIsDefinitivo(false);
     utenza.addUtente(configuratore);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNbaxRwLEe-urICxG0GjCg" name="login" specification="_DL5JsBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNbaxhwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNbaxxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int accesso = 1;
     for (int i = 0; i &lt; NUM_MAX_TENTATIVI; i++) {
         System.out.println(&quot;Inserisci dati di login: &quot;);
         String ID = InputDati.leggiStringaNonVuota(&quot;  ID: &quot;);
         String PSSW = InputDati.leggiStringaNonVuota(&quot;  Password: &quot;);
         try {
             accesso = autenticazione(utenza, ID, PSSW);
         } catch (ConfLoginFailException e) {
             System.out.println(e.getMessage());
             System.out.println();
         }
         if (accesso != 1) 
             break;
     }
     return accesso;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNbayBwLEe-urICxG0GjCg" name="autenticazione" specification="_DL5JsxwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNbayRwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNbayhwLEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNbayxwLEe-urICxG0GjCg" name="PSSW">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNbazBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Configuratore conf = utenza.autenticazioneConfiguratore(ID, PSSW);
     if (conf == null) {
         throw new ConfLoginFailException();
     } else if (!conf.getCredenziali().isDefinitive()) {
         System.out.println(&quot;Scegli nuove credenziali: &quot;);
         Credenziali credenzialiRegistrazione = primoAccesso(utenza);
         conf.setCredenziali(credenzialiRegistrazione);
         conf.setIsDefinitivo(true);
         return 2;
     } else {
         System.out.println(&quot;-> Utente riconosciuto&quot;);
         return 2;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNcB0BwLEe-urICxG0GjCg" name="primoAccesso" specification="_DL6X0BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNcB0RwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNcB0hwLEe-urICxG0GjCg" type="_DICkcBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>String ID;
     do {
         ID = InputDati.leggiStringaNonVuota(&quot;  ID: &quot;);
         if (utenza.verificaEsistenzaID(ID)) System.out.println(&quot; ! ID già utilizzato ! &quot;);
     } while (utenza.verificaEsistenzaID(ID));

     String PSSW = InputDati.leggiStringaNonVuota(&quot;  Password: &quot;);
     return new Credenziali(ID, PSSW);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNcB0xwLEe-urICxG0GjCg" name="creaComprensorio" specification="_DL6-4RwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNcB1BwLEe-urICxG0GjCg" name="geografia" type="_DIvIABwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>String nome;
		do {
			nome = InputDati.leggiStringaNonVuota(&quot;Nome: &quot;);
		} while (geografia.verificaEsistenzaComprensorio(nome));
     Comprensorio comprensorio = new Comprensorio(nome);

     System.out.println(&quot;Inserisci comprensorio (Exit per uscire) &quot;);
     String comune;

     do {
         comune = InputDati.leggiStringaNonVuota(&quot;  comune -> &quot;);
         comprensorio.addComune(comune);
     } while (!comune.equalsIgnoreCase(&quot;Exit&quot;));

     int size = comprensorio.getComprensorio().size();
     comprensorio.getComprensorio().remove(size - 1);

     geografia.addComprensorio(comprensorio);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNcB1RwLEe-urICxG0GjCg" name="creaRadice" specification="_DL6-4xwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNcB1hwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNcB1xwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>String radice;
	    do {
	        radice = InputDati.leggiStringaNonVuota(&quot;Nome radice -> &quot;);
	    } while (gerarchia.verificaEsistenzaNomeRadice(radice));

	    String campo = InputDati.leggiStringaNonVuota(&quot;Campo -> &quot;);
	    Nodo root = new Nodo(radice, null, campo);

	    creaValoriDominio(root);

	    return root;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNco4BwLEe-urICxG0GjCg" name="creaValoriDominio" specification="_DL7l8hwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNco4RwLEe-urICxG0GjCg" name="nodo" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>int num = 0;
     do {
         num++;
         String valoreDominio = InputDati.leggiStringaNonVuota(num + &quot;' valore del dominio -> &quot;);
         if (InputDati.yesOrNo(&quot;  Vuoi inserire una descrizione di &quot; + valoreDominio + &quot;? &quot;)) {
             String descrizioneDominio = InputDati.leggiStringaNonVuota(&quot;Descrizione -> &quot;);
             nodo.addElementiDominio(valoreDominio, descrizioneDominio);
         } else {
             nodo.addElementiDominio(valoreDominio);
         }
     } while (InputDati.yesOrNo(&quot;Vuoi aggiugere un altro elemento al dominio? &quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNco4hwLEe-urICxG0GjCg" name="creaNodiFiglio" specification="_DMcjUBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNco4xwLEe-urICxG0GjCg" name="nodoParent" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNco5BwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNco5RwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNco5hwLEe-urICxG0GjCg" name="foglieAttuali" type="_DL3UgBwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>int numFigli = 0;
	    do {
	        numFigli++;
	        System.out.println(&quot;\n&quot; + numFigli + &quot;' figlio (di &quot; + nodoParent.getNome() 
	        + &quot; [&quot; +nodoParent.getDominio(numFigli)+ &quot;]): &quot;);
   
	        String nome;
	        do {
	            nome = InputDati.leggiStringaNonVuota(&quot;Nome -> &quot;);
	        } while (radice.verificaEsistenzaNome(nome));

	        boolean isFoglia = InputDati.yesOrNo(&quot;È foglia? &quot;);
	        Nodo nodoChild;
	        if (isFoglia) {
	            nodoChild = new Nodo(nome, radice.getNome());
	            foglieAttuali.add(nodoChild);
	        } else {
	            nodoChild = creaNonFoglia(nome, radice);
	        }

	        try {
	            nodoParent.addChild(nodoChild);
	        } catch (Exception e) {
	            e.getMessage();
	        }
	    } while (numFigli &lt; nodoParent.getDominio().size());

	    for (Nodo nodo : nodoParent.getChildren()) {
	        if (!nodo.isLeaf()) {
	            creaNodiFiglio(nodo, gerarchia, radice, foglieAttuali);
	        }
	    }
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNco5xwLEe-urICxG0GjCg" name="creaNonFoglia" specification="_DL8NABwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNco6BwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNco6RwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNco6hwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>String campo = InputDati.leggiStringaNonVuota(&quot;Campo -> &quot;);
	    Nodo nodoChild = new Nodo(nome, radice.getNome(), campo);

	    creaValoriDominio(nodoChild);

	    return nodoChild;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNdP8BwLEe-urICxG0GjCg" name="creaFattoriConversione" specification="_DMdxcRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNdP8RwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNdP8hwLEe-urICxG0GjCg" name="foglieAttuali" type="_DL3UgBwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>System.out.println(&quot;\nInserimento fattori di conversione:&quot;);
     do {
         Nodo nodo1 = chiediFoglia(&quot;Foglia 1:&quot;, gerarchia);
         Nodo nodo2 = chiediFoglia(&quot;Foglia 2:&quot;, gerarchia);

         double fattoreDiConversione = chiediFattoreConversione(gerarchia);

         boolean condizione = !foglieAttuali.contains(nodo1)
                 &amp;&amp; !foglieAttuali.contains(nodo2);
         if (!condizione) {
             nodo1.addFattoreConversione(nodo2, fattoreDiConversione);
             nodo2.addFattoreConversione(nodo1, 1/fattoreDiConversione);
         }
     } while (InputDati.yesOrNo(&quot;Vuoi continuare l'inserimento? &quot;));

     Nodo.addTransitivoFattoreConversione(gerarchia);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNdP8xwLEe-urICxG0GjCg" name="chiediFoglia" specification="_DL8NBBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNdP9BwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNdP9RwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNdP9hwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>Nodo nodo;
     do {
         System.out.println(messaggio);
         String foglia = InputDati.leggiStringaNonVuota(&quot;  Nome -> &quot;);
         String radice = InputDati.leggiStringaNonVuota(&quot;  Radice -> &quot;);
         nodo = gerarchia.visualizzaFoglia(foglia, radice);
         
     } while (nodo == null);
     return nodo;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNdP9xwLEe-urICxG0GjCg" name="chiediFattoreConversione" specification="_DL80ExwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNdP-BwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNdP-RwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double fattoreDiConversione;
	    do {
	        fattoreDiConversione = InputDati.leggiDouble(&quot;Fattore di conversione -> &quot;);
	    } while (!Nodo.verificaFattoreConversione(fattoreDiConversione));
	    return fattoreDiConversione;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNdP-hwLEe-urICxG0GjCg" name="stampaFattori" specification="_DL9bIBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNdP-xwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>String foglia = InputDati.leggiStringaNonVuota(&quot;Inserisci nome foglia: &quot;);
     String radice = InputDati.leggiStringaNonVuota(&quot;Inserisci radice della gerarchia della foglia: &quot;);
     Nodo nodo = gerarchia.visualizzaFoglia(foglia, radice);
     if (nodo == null)
         System.out.println(&quot;  Non è stata trovata nessuna corrispondenza&quot;);
     else
         System.out.println(nodo.toStringFactors());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DL4ioBwLEe-urICxG0GjCg" name="registrazione" isStatic="true" method="_DNbawxwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL4ioRwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL5JsBwLEe-urICxG0GjCg" name="login" isStatic="true" method="_DNbaxRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL5JsRwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DL5JshwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DL5JsxwLEe-urICxG0GjCg" name="autenticazione" visibility="private" isStatic="true" method="_DNbayBwLEe-urICxG0GjCg" raisedException="_DIzZcBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL5JtBwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DL5JtRwLEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DL5JthwLEe-urICxG0GjCg" name="PSSW">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DL5wwBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DL6X0BwLEe-urICxG0GjCg" name="primoAccesso" visibility="private" isStatic="true" method="_DNcB0BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL6X0RwLEe-urICxG0GjCg" name="utenza" type="_DIWGcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DL6-4BwLEe-urICxG0GjCg" type="_DICkcBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL6-4RwLEe-urICxG0GjCg" name="creaComprensorio" isStatic="true" method="_DNcB0xwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL6-4hwLEe-urICxG0GjCg" name="geografia" type="_DIvIABwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL6-4xwLEe-urICxG0GjCg" name="creaRadice" isStatic="true" method="_DNcB1RwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL7l8BwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DL7l8RwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL7l8hwLEe-urICxG0GjCg" name="creaValoriDominio" visibility="private" isStatic="true" method="_DNco4BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL7l8xwLEe-urICxG0GjCg" name="nodo" type="_DI0nkBwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL8NABwLEe-urICxG0GjCg" name="creaNonFoglia" visibility="private" isStatic="true" method="_DNco5xwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL8NARwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DL8NAhwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DL8NAxwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL8NBBwLEe-urICxG0GjCg" name="chiediFoglia" visibility="private" isStatic="true" method="_DNdP8xwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL80EBwLEe-urICxG0GjCg" name="messaggio">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DL80ERwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DL80EhwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL80ExwLEe-urICxG0GjCg" name="chiediFattoreConversione" visibility="private" isStatic="true" method="_DNdP9xwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL80FBwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DL80FRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DL9bIBwLEe-urICxG0GjCg" name="stampaFattori" isStatic="true" method="_DNdP-hwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DL9bIRwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMcjUBwLEe-urICxG0GjCg" name="creaNodiFiglio" isStatic="true" method="_DNco4hwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DMcjURwLEe-urICxG0GjCg" name="nodoParent" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMcjUhwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMcjUxwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMcjVBwLEe-urICxG0GjCg" name="foglieAttuali" type="_DL3UgBwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMdxcRwLEe-urICxG0GjCg" name="creaFattoriConversione" isStatic="true" method="_DNdP8BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DMdxchwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMdxcxwLEe-urICxG0GjCg" name="foglieAttuali" type="_DL3UgBwLEe-urICxG0GjCg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DH8d0BwLEe-urICxG0GjCg" name="Comprensorio">
              <ownedComment xmi:id="_DNr5dhwLEe-urICxG0GjCg">
                <body>La classe Comprensorio rappresenta un insieme di comuni.
Gli oggetti di questa classe contengono una lista di comuni
all'interno di un determinato territorio.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM3aEBwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM3aERwLEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM4BIBwLEe-urICxG0GjCg" name="nome">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM4BIRwLEe-urICxG0GjCg" name="comprensorio" type="_DL3UgBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN5U0RwLEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_DMhb0BwLEe-urICxG0GjCg" client="_DH8d0BwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNd3ABwLEe-urICxG0GjCg" name="Comprensorio" specification="_DH9r8BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNd3ARwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNd3AhwLEe-urICxG0GjCg" type="_DH8d0BwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.comprensorio = new ArrayList&lt;>();
     this.nome = nome;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNd3AxwLEe-urICxG0GjCg" name="addComune" specification="_DH-TABwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNd3BBwLEe-urICxG0GjCg" name="luogo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.comprensorio.add(luogo);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNd3BRwLEe-urICxG0GjCg" name="toString" specification="_DH-TAhwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNd3BhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
     bf.append(this.nome + &quot;\n&quot;);
     for (String comune : comprensorio) {
         bf.append(&quot; - &quot; + comune);
         bf.append(&quot;\n&quot;);
     }
     
     return bf.toString();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DH9r8BwLEe-urICxG0GjCg" name="Comprensorio" method="_DNd3ABwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DH9r8hwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DH9r8xwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DH9r8RwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DH9r9BwLEe-urICxG0GjCg" type="_DH8d0BwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DH-TABwLEe-urICxG0GjCg" name="addComune" method="_DNd3AxwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DH-TARwLEe-urICxG0GjCg" name="luogo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DH-TAhwLEe-urICxG0GjCg" name="toString" method="_DNd3BRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DH-TAxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DH_hIBwLEe-urICxG0GjCg" name="Configuratore">
              <ownedComment xmi:id="_DNsggBwLEe-urICxG0GjCg">
                <body>La classe Configuratore rappresenta un utente con privilegi di configurazione.
Estende la classe astratta Utente.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <generalization xmi:id="_DMAecxwLEe-urICxG0GjCg" general="_DIR1ABwLEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_DM4oMRwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM4oMhwLEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM4oMxwLEe-urICxG0GjCg" name="TIPOUTENTE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM5PQBwLEe-urICxG0GjCg" value="'c'"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DMiC4BwLEe-urICxG0GjCg" client="_DH_hIBwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNd3BxwLEe-urICxG0GjCg" name="Configuratore" specification="_DL_3YBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNd3CBwLEe-urICxG0GjCg" name="credenziali" type="_DICkcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNd3CRwLEe-urICxG0GjCg" type="_DH_hIBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>super(TIPOUTENTE, credenziali);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNd3ChwLEe-urICxG0GjCg" name="Configuratore" specification="_DIAvQBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNd3CxwLEe-urICxG0GjCg" type="_DH_hIBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>super(TIPOUTENTE, Credenziali.credenzialiPredefinite());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIAvQBwLEe-urICxG0GjCg" name="Configuratore" method="_DNd3ChwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DIAvQRwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIAvQhwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIAvQxwLEe-urICxG0GjCg" type="_DH_hIBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DL_3YBwLEe-urICxG0GjCg" name="Configuratore" method="_DNd3BxwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DMAecBwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DMAecRwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DL_3YRwLEe-urICxG0GjCg" name="credenziali" type="_DICkcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMAechwLEe-urICxG0GjCg" type="_DH_hIBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DICkcBwLEe-urICxG0GjCg" name="Credenziali">
              <ownedComment xmi:id="_DNsggRwLEe-urICxG0GjCg">
                <body>La classe Credenziali rappresenta le credenziali di accesso di un utente.
Ogni credenziale è composta da un ID (identificativo dell'utente) e una password.
Inoltre, tiene traccia se le credenziali sono definitive o meno.
Se un utente si è appena registrato avrà delle credenziali 
non definitive fino alla loro modifica.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM5PQRwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM5PQhwLEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM5PQxwLEe-urICxG0GjCg" name="IDLENTGH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM5PRBwLEe-urICxG0GjCg" value="6"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM5PRRwLEe-urICxG0GjCg" name="PSSWLENTGH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM52UBwLEe-urICxG0GjCg" value="8"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM52URwLEe-urICxG0GjCg" name="IDCHAR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM52UhwLEe-urICxG0GjCg" value="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM52UxwLEe-urICxG0GjCg" name="PSSWCHAR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM52VBwLEe-urICxG0GjCg" value="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!?@^&amp;%$£&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM6dYBwLEe-urICxG0GjCg" name="ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM6dYRwLEe-urICxG0GjCg" name="password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM6dYhwLEe-urICxG0GjCg" name="definitive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DMip8BwLEe-urICxG0GjCg" client="_DICkcBwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNeeEBwLEe-urICxG0GjCg" name="Credenziali" specification="_DIDykBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNeeERwLEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNeeEhwLEe-urICxG0GjCg" name="password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNeeExwLEe-urICxG0GjCg" type="_DICkcBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.ID = ID;
     this.password = password;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNeeFBwLEe-urICxG0GjCg" name="credenzialiPredefinite" specification="_DIEZohwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNeeFRwLEe-urICxG0GjCg" type="_DICkcBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>// Genera un ID e una password casuali
     String userID = Estrattore.estraiString(IDCHAR, IDLENTGH);
     String userPSSW = Estrattore.estraiString(PSSWCHAR, PSSWLENTGH);
     return new Credenziali(userID.toString(), userPSSW.toString());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIDykBwLEe-urICxG0GjCg" name="Credenziali" method="_DNeeEBwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DIDykxwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIEZoBwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIDykRwLEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIDykhwLEe-urICxG0GjCg" name="password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIEZoRwLEe-urICxG0GjCg" type="_DICkcBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIEZohwLEe-urICxG0GjCg" name="credenzialiPredefinite" isStatic="true" method="_DNeeFBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DMBskBwLEe-urICxG0GjCg" type="_DICkcBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIGO0BwLEe-urICxG0GjCg" name="Gerarchia">
              <ownedComment xmi:id="_DNsgghwLEe-urICxG0GjCg">
                <body>La classe Gerarchia rappresenta l'insieme di tutti gli 
alberi nel sistema e gestisce le operazioni su di essi.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM7EcBwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM7EcRwLEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM7EchwLEe-urICxG0GjCg" name="alberi" visibility="private" type="_DL3UgBwLEe-urICxG0GjCg" association="_DN574RwLEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_DM7rghwLEe-urICxG0GjCg" name="radici" visibility="private" type="_DL3UgBwLEe-urICxG0GjCg" association="_DN6i8RwLEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_DM8SkhwLEe-urICxG0GjCg" name="foglie" type="_DL3UgBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN7KARwLEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_DMj4EBwLEe-urICxG0GjCg" client="_DIGO0BwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNeeFhwLEe-urICxG0GjCg" name="Gerarchia" specification="_DIHc8BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNeeFxwLEe-urICxG0GjCg" type="_DIGO0BwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.alberi = new ArrayList&lt;>();
     this.radici = new ArrayList&lt;>();
     this.foglie = new ArrayList&lt;>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNeeGBwLEe-urICxG0GjCg" name="toString" specification="_DIIEAxwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNeeGRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder builder = new StringBuilder();
     
     for (Nodo nodo : radici)  {
         builder.append(&quot;\n\n&quot;);
         try {
             builder.append(new Albero(nodo).toString());
         } catch (Exception e) {
             e.printStackTrace();
         }

     }
     return builder.toString();     
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNeeGhwLEe-urICxG0GjCg" name="addAlbero" specification="_DMDhwBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNeeGxwLEe-urICxG0GjCg" name="albero" type="_DIZw0BwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>alberi.add(albero);
     radici.add(albero.getRadice());
     foglie.addAll(albero.getFoglie());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfFIBwLEe-urICxG0GjCg" name="verificaEsistenzaNomeRadice" specification="_DIJ5MBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfFIRwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNfFIhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Nodo albero : radici) {
         if (albero.getNome().equals(nome)) {
             return true;
         }
     }
     return false;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfFIxwLEe-urICxG0GjCg" name="visualizzaFoglia" specification="_DIKgQRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfFJBwLEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNfFJRwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNfFJhwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>return visualizza(nomeNodo, root, this.radici);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfFJxwLEe-urICxG0GjCg" name="visualizza" specification="_DMj4ERwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfFKBwLEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNfFKRwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNfFKhwLEe-urICxG0GjCg" name="list" type="_DMCToBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNfFKxwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>for (Nodo nodo : list) {
         if (nodo.getNome().equals(root)) {
             for (Nodo nodoChild : nodo.getChildren()) {
                 if (nodoChild.isLeaf()) {
                     if (nodoChild.getNome().equals(nomeNodo))
                         return nodoChild;
                 } else {
                     Nodo foundNode = visualizza(nomeNodo, nodoChild.getNome(), nodo.getChildren());
                     if (foundNode != null) {
                         return foundNode;
                     }
                 }
             }
         }
     }
     return null;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIHc8BwLEe-urICxG0GjCg" name="Gerarchia" method="_DNeeFhwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DIIEABwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIIEARwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DNsggxwLEe-urICxG0GjCg">
                  <body>Costruttore della classe Gerarchia.
     * Inizializza la gerarchia con liste vuote per gli alberi, le radici e le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DIIEAhwLEe-urICxG0GjCg" type="_DIGO0BwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIIEAxwLEe-urICxG0GjCg" name="toString" method="_DNeeGBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DIIEBBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIJ5MBwLEe-urICxG0GjCg" name="verificaEsistenzaNomeRadice" method="_DNfFIBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNsghRwLEe-urICxG0GjCg">
                  <body>Verifica se esiste un nodo radice con il dato nome nella gerarchia.
     * 
     * @param nome Il nome del nodo radice da cercare
     * @return true se esiste un nodo radice con il nome specificato, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_DIJ5MRwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIKgQBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIKgQRwLEe-urICxG0GjCg" name="visualizzaFoglia" method="_DNfFIxwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNsghhwLEe-urICxG0GjCg">
                  <body>Restituisce il nodo corrispondente al nome specificato nella gerarchia.
     * 
     * @param nomeNodo Il nome del nodo da cercare
     * @param root La radice della gerarchia
     * @return Il nodo corrispondente al nome specificato, null se non trovato</body>
                </ownedComment>
                <ownedParameter xmi:id="_DIKgQhwLEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DILHUBwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DMDhwhwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMDhwBwLEe-urICxG0GjCg" name="addAlbero" method="_DNeeGhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNsghBwLEe-urICxG0GjCg">
                  <body>Aggiunge un albero alla gerarchia.
     * 
     * @param albero Il nodo radice dell'albero da aggiungere</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMDhwRwLEe-urICxG0GjCg" name="albero" type="_DIZw0BwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMj4ERwLEe-urICxG0GjCg" name="visualizza" visibility="private" isStatic="true" method="_DNfFJxwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNsghxwLEe-urICxG0GjCg">
                  <body>Restituisce il nodo corrispondente al nome specificato nella gerarchia.
     * 
     * @param nomeNodo Il nome del nodo da cercare
     * @param root La radice della gerarchia
     * @param list La lista di nodi in cui cercare
     * @return Il nodo corrispondente al nome specificato, null se non trovato</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMkfIBwLEe-urICxG0GjCg" name="nomeNodo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DMkfIRwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DMkfIhwLEe-urICxG0GjCg" name="list" type="_DMCToBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMkfIxwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIOxsBwLEe-urICxG0GjCg" name="Main">
              <ownedComment xmi:id="_DNsgiBwLEe-urICxG0GjCg">
                <body>Classe Main per l'esecuzione del programma.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM9gsBwLEe-urICxG0GjCg" name="voci" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DM9gsRwLEe-urICxG0GjCg" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM-HwRwLEe-urICxG0GjCg" value="{&quot;Introdurre comprensorio geografico&quot;, &quot;Introdurre albero&quot;, &quot;Visualizza comprensorio&quot;, &#xA;            &quot;Visualizza gerarchia&quot;, &quot;Visualizza fattori di conversione&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM-HwxwLEe-urICxG0GjCg" name="vociAccesso" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DM-HxBwLEe-urICxG0GjCg" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM-u0RwLEe-urICxG0GjCg" value="{&quot;Registrazione&quot;,&quot;Login&quot;}"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfFLBwLEe-urICxG0GjCg" name="main" specification="_DIPYwBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfFLRwLEe-urICxG0GjCg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DNfFLhwLEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>MyMenu menuAccesso = new MyMenu(&quot;Menu accesso&quot;, vociAccesso);
     MyMenu menu = new MyMenu(&quot;Menu principale&quot;, voci);

     // Caricamento da file
     Utenza utenza = FileManager.caricaUtenza();
     Gerarchia gerarchia = FileManager.caricaGerarchia();
     Geografia geografia = FileManager.caricaGeografia();

     if (utenza == null || gerarchia == null || geografia == null) {
         // Inizializzazione predefinita degli oggetti solo se non sono stati caricati da file
         DefaultInitializer defaultInitializer = new DefaultInitializer();
         gerarchia = defaultInitializer.getGerarchia();
         utenza = defaultInitializer.getUtenza();
         geografia = defaultInitializer.getGeografia();
     } else {
         System.out.println(&quot;Lettura da file: &quot; + FileManager.getUtenzaFile() 
         + &quot;, &quot; + FileManager.getGerarchiaFile() + &quot;, &quot; + FileManager.getGeografiaFile());
     }

     int accesso;
     do {
         accesso = menuAccesso.scegli();
         switch (accesso) {
             case 1:
             	Application.registrazione(utenza);
                 break;

             case 2:
                 accesso = Application.login(utenza);
                 break;

             default:
                 break;
         }
     } while (accesso == 1);

     if (accesso != 0) {
         int scelta;
         do {
             scelta = menu.scegli();
             switch (scelta) {

                 case 1:
                 	Application.creaComprensorio(geografia);
                     break;

                 case 2:
                     ArrayList&lt;Nodo> foglieAttuali = new ArrayList&lt;>();
                     Nodo root = Application.creaRadice(gerarchia);
                     Application.creaNodiFiglio(root, gerarchia, root, foglieAttuali);
                     gerarchia.addAlbero(new Albero(root));
                     Application.creaFattoriConversione(gerarchia, foglieAttuali);
                     break;

                 case 3:
                     System.out.println(geografia.toString());
                     break;

                 case 4:
                     String ger = gerarchia.toString();
                     System.out.println(ger);
                     break;

                 case 5:
                     Application.stampaFattori(gerarchia);
                     break;

                 default:
                     break;
             }
         } while (scelta != 0);
     }

     FileManager.salvaSuFile(gerarchia);
     FileManager.salvaSuFile(utenza);
     FileManager.salvaSuFile(geografia);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIPYwBwLEe-urICxG0GjCg" name="main" isStatic="true" method="_DNfFLBwLEe-urICxG0GjCg" raisedException="_DHtNQBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DIPYwRwLEe-urICxG0GjCg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DIPYwhwLEe-urICxG0GjCg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIR1ABwLEe-urICxG0GjCg" name="Utente" isAbstract="true">
              <ownedComment xmi:id="_DNsgihwLEe-urICxG0GjCg">
                <body>La classe astratta Utente rappresenta un utente generico del sistema.
Ogni utente ha un tipo (definito da un carattere) e delle credenziali
(identificativo e password).

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM_V4BwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM_V4RwLEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM_V4hwLEe-urICxG0GjCg" name="tipoUtente" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM_88BwLEe-urICxG0GjCg" name="credenziali" type="_DICkcBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN7xERwLEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_DMmUUBwLEe-urICxG0GjCg" client="_DIR1ABwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfsMhwLEe-urICxG0GjCg" name="Utente" specification="_DMFW8BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfsMxwLEe-urICxG0GjCg" name="tipoUtente">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNfsNBwLEe-urICxG0GjCg" name="credenziali" type="_DICkcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNfsNRwLEe-urICxG0GjCg" type="_DIR1ABwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.tipoUtente = tipoUtente;
     this.credenziali = credenziali;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfsNhwLEe-urICxG0GjCg" name="getID" specification="_DITDIBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfsNxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.getID();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfsOBwLEe-urICxG0GjCg" name="getPassword" specification="_DITqMRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfsORwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.getPassword();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfsOhwLEe-urICxG0GjCg" name="setCredenziali" specification="_DMF-BBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfsOxwLEe-urICxG0GjCg" name="credenziali" type="_DICkcBwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>this.credenziali.setID(credenziali.getID());
     this.credenziali.setPassword(credenziali.getPassword());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNfsPBwLEe-urICxG0GjCg" name="setIsDefinitivo" specification="_DIURQBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNfsPRwLEe-urICxG0GjCg" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.credenziali.setDefinitive(x);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNgTQBwLEe-urICxG0GjCg" name="getIsDefinitivo" specification="_DIURQhwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNgTQRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.credenziali.isDefinitive();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DITDIBwLEe-urICxG0GjCg" name="getID" method="_DNfsNhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNtHkBwLEe-urICxG0GjCg">
                  <body>Restituisce l'ID dell'utente.
     * 
     * @return String L'ID dell'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DITqMBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DITqMRwLEe-urICxG0GjCg" name="getPassword" method="_DNfsOBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNtHkRwLEe-urICxG0GjCg">
                  <body>Restituisce la password dell'utente.
     * 
     * @return String La password dell'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DITqMhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIURQBwLEe-urICxG0GjCg" name="setIsDefinitivo" method="_DNfsPBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNtHkxwLEe-urICxG0GjCg">
                  <body>Imposta la definitività delle credenziali.
     * Per un utente appena creato è false.
     * 
     * @param x La definitività da impostare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DIURQRwLEe-urICxG0GjCg" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DIURQhwLEe-urICxG0GjCg" name="getIsDefinitivo" method="_DNgTQBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNtHlBwLEe-urICxG0GjCg">
                  <body>Restituisce lo stato di definitività delle credenziali.
     * 
     * @return boolean True se le credenziali sono definitive, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_DIU4UBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DMFW8BwLEe-urICxG0GjCg" name="Utente" method="_DNfsMhwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DMF-ARwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DMF-AhwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DNsgixwLEe-urICxG0GjCg">
                  <body>Costruttore della classe Utente.
     * 
     * @param tipoUtente   Il tipo di utente (carattere)
     * @param credenziali  Le credenziali associate all'utente</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMFW8RwLEe-urICxG0GjCg" name="tipoUtente">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DMF-ABwLEe-urICxG0GjCg" name="credenziali" type="_DICkcBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMF-AxwLEe-urICxG0GjCg" type="_DIR1ABwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMF-BBwLEe-urICxG0GjCg" name="setCredenziali" method="_DNfsOhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNtHkhwLEe-urICxG0GjCg">
                  <body>Imposta le credenziali dell'utente.
     * 
     * @param credenziali  Le nuove credenziali da impostare</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMF-BRwLEe-urICxG0GjCg" name="credenziali" type="_DICkcBwLEe-urICxG0GjCg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DIWGcBwLEe-urICxG0GjCg" name="Utenza">
              <ownedComment xmi:id="_DNtHlRwLEe-urICxG0GjCg">
                <body>La classe Utenza gestisce gli utenti nel sistema.

@author Daniele Martinelli
@author Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DM_88RwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DM_88hwLEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DM_88xwLEe-urICxG0GjCg" name="utenti" type="_DL3UgBwLEe-urICxG0GjCg" isReadOnly="true" association="_DN8YIRwLEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_DMm7YBwLEe-urICxG0GjCg" client="_DIWGcBwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNgTQhwLEe-urICxG0GjCg" name="Utenza" specification="_DIXUkBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNgTQxwLEe-urICxG0GjCg" type="_DIWGcBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.utenti = new ArrayList&lt;>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNgTRBwLEe-urICxG0GjCg" name="addUtente" specification="_DMGlEBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNgTRRwLEe-urICxG0GjCg" name="utente" type="_DIR1ABwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>this.utenti.add(utente);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNgTRhwLEe-urICxG0GjCg" name="autenticazioneConfiguratore" specification="_DIX7oBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNgTRxwLEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNgTSBwLEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNgTSRwLEe-urICxG0GjCg" type="_DH_hIBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>for (Utente utente : utenti) {
			if (utente.getID().equals(ID)) {
				if (utente.getPassword().equals(Password)) {
					if (utente.getTipoUtente() == Configuratore.TIPOUTENTE ){
						return (Configuratore) utente;
					}
				}
			}
		}
		return null;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNg6UBwLEe-urICxG0GjCg" name="verificaEsistenzaID" specification="_DIYisBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNg6URwLEe-urICxG0GjCg" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNg6UhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Utente utente : utenti) {
			if (utente.getID().equals(id)) {
				return true;
			}
		}
		return false;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DIXUkBwLEe-urICxG0GjCg" name="Utenza" method="_DNgTQhwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DIXUkRwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DIXUkhwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DIXUkxwLEe-urICxG0GjCg" type="_DIWGcBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIX7oBwLEe-urICxG0GjCg" name="autenticazioneConfiguratore" method="_DNgTRhwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DIX7oRwLEe-urICxG0GjCg" name="ID">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIX7ohwLEe-urICxG0GjCg" name="Password">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DMHMIRwLEe-urICxG0GjCg" type="_DH_hIBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DIYisBwLEe-urICxG0GjCg" name="verificaEsistenzaID" method="_DNg6UBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DIYisRwLEe-urICxG0GjCg" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DIYishwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DMGlEBwLEe-urICxG0GjCg" name="addUtente" method="_DNgTRBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DMHMIBwLEe-urICxG0GjCg" name="utente" type="_DIR1ABwLEe-urICxG0GjCg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DI0nkBwLEe-urICxG0GjCg" name="Nodo">
              <ownedComment xmi:id="_DNuVuxwLEe-urICxG0GjCg">
                <body>La classe Nodo rappresenta un nodo all'interno di un albero.
Ogni nodo può essere una foglia o una non foglia.
Se un nodo è una foglia, contiene i fattori di conversione verso altri nodi.
Se un nodo è una non foglia, può avere figli e contiene informazioni sul campo e sul dominio.

Autore: Daniele Martinelli e Federico Sabbadini</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DNIf0BwLEe-urICxG0GjCg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNIf0RwLEe-urICxG0GjCg" value="1L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNIf0hwLEe-urICxG0GjCg" name="nome" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNIf0xwLEe-urICxG0GjCg" name="isLeaf" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNJG4RwLEe-urICxG0GjCg" name="root" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNJG4xwLEe-urICxG0GjCg" name="children" type="_DI0nkBwLEe-urICxG0GjCg" isOrdered="true" isReadOnly="true" association="_DN_bcRwLEe-urICxG0GjCg">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DNJG5BwLEe-urICxG0GjCg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNJt8BwLEe-urICxG0GjCg" name="campo" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNJt8hwLEe-urICxG0GjCg" name="dominio" type="_DMCToBwLEe-urICxG0GjCg" isReadOnly="true" association="_DOACgRwLEe-urICxG0GjCg"/>
              <ownedAttribute xmi:id="_DNKVARwLEe-urICxG0GjCg" name="MIN_FATTORECONVERSIONE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNKVAhwLEe-urICxG0GjCg" value="0.5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNK8EBwLEe-urICxG0GjCg" name="MAX_FATTORECONVERSIONE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DNK8ERwLEe-urICxG0GjCg" value="2.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DNK8EhwLEe-urICxG0GjCg" name="fattori" type="_DMOg4BwLEe-urICxG0GjCg" isReadOnly="true" association="_DOApkRwLEe-urICxG0GjCg"/>
              <interfaceRealization xmi:id="_DMqlwRwLEe-urICxG0GjCg" client="_DI0nkBwLEe-urICxG0GjCg" supplier="_DL-pQBwLEe-urICxG0GjCg" contract="_DL-pQBwLEe-urICxG0GjCg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNkksRwLEe-urICxG0GjCg" name="Nodo" specification="_DI11sBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNkkshwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNkksxwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNkktBwLEe-urICxG0GjCg" name="campo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNkktRwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.root = root;
		this.campo = campo;
		this.nome = nome;
		this.isLeaf = false;
		this.children = new ArrayList&lt;>();
		this.dominio = new ArrayList&lt;>();
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNkkthwLEe-urICxG0GjCg" name="Nodo" specification="_DI3D0BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNkktxwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNkkuBwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNkkuRwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>this.nome = nome;
		this.root = root;
		this.isLeaf = true;
		this.fattori = new HashMap&lt;Nodo, Double>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNlLwBwLEe-urICxG0GjCg" name="isLeaf" specification="_DI3D1hwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNlLwRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return isLeaf;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNlLwhwLEe-urICxG0GjCg" name="root" specification="_DI3q4BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNlLwxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return root;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNlLxBwLEe-urICxG0GjCg" name="getCampo" specification="_DI3q4hwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNlLxRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return campo;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNly0BwLEe-urICxG0GjCg" name="getDominio" specification="_DI4R8BwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNly0RwLEe-urICxG0GjCg" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNly0hwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String[] ret = this.dominio.get(i - 1);
		return ret[0];
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNly0xwLEe-urICxG0GjCg" name="addElementiDominio" specification="_DI4R8xwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNly1BwLEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNly1RwLEe-urICxG0GjCg" name="descrizione">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.dominio.add(new String[] { valore, descrizione });
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNly1hwLEe-urICxG0GjCg" name="addElementiDominio" specification="_DI45ABwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNly1xwLEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.dominio.add(new String[] { valore });
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNly2BwLEe-urICxG0GjCg" name="addChild" specification="_DMSLQBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNly2RwLEe-urICxG0GjCg" name="child" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>if (this.isLeaf)
			throw new LeafHasChildrenException();
		this.children.add(child);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNly2hwLEe-urICxG0GjCg" name="toString" specification="_DI5gEBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNly2xwLEe-urICxG0GjCg" name="blank">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNly3BwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		bf.append(&quot; &quot; + nome + &quot;\n&quot; );
		bf.append(blank + &quot;campo: &quot; + campo + &quot;\n&quot; );
		bf.append(blank + toStringDomain() + &quot;\n&quot; );
		bf.append(blank + toStringChildren());
		
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNmZ4BwLEe-urICxG0GjCg" name="toStringFactors" specification="_DI5gExwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNmZ4RwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return toStringF(this.nome);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNmZ4hwLEe-urICxG0GjCg" name="toStringDomain" specification="_DI5gFRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNmZ4xwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		bf.append(&quot;dominio: [&quot;);
		for (String[] elem : this.dominio) {
			bf.append(&quot;(valore: &quot; + elem[0].toString());
			if (elem.length > 1)
				bf.append(&quot;, descrizione: &quot; + elem[1].toString());
			bf.append(&quot;)&quot;);
		}
		bf.append(&quot;]&quot;);
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNmZ5BwLEe-urICxG0GjCg" name="toStringChildren" specification="_DI6HIRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNmZ5RwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		int num = this.children.size();
		if (num == 1)
			bf.append(num + &quot; figlio: [&quot;);
		else
			bf.append(num + &quot; figli: [&quot;);
		for (Nodo nodo : this.children) {
			bf.append(&quot;(&quot; + nodo.getNome());
			bf.append(&quot;)&quot;);
		}
		bf.append(&quot;]&quot;);
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnA8BwLEe-urICxG0GjCg" name="verificaEsistenzaNome" specification="_DI6HIxwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnA8RwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNnA8hwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return verifica(nome, this);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnA8xwLEe-urICxG0GjCg" name="verifica" specification="_DMSyUBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnA9BwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNnA9RwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNnA9hwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (radice.isLeaf()) {
         return radice.getNome().equals(nome);
     } else {
         for (Nodo nodo : radice.getChildren()) {
             if (nodo.getNome().equals(nome) || verifica(nome, nodo)) {
                 return true;
             }
         }
         return false;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnA9xwLEe-urICxG0GjCg" name="toNavigationString" specification="_DI6uMRwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnA-BwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder b = new StringBuilder();
 	b.append(&quot; nome: &quot; + this.nome);
 	
 	if (!this.isLeaf) {
     	b.append(&quot;\n |campo: &quot; + this.campo);
     	b.append(&quot;\n |dominio: &quot;);
     	int var = 0;
     	for (String[] valore : this.dominio) {
     		var++;
 			b.append(&quot;\n  &quot; + var + &quot; - &quot; + valore[0]);
 			if (valore.length>1)
 				b.append(&quot;, &quot; + valore [1]);
 		}
 	}	else
 		b.append(&quot; |foglia!|&quot;);
 	return b.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnA-RwLEe-urICxG0GjCg" name="fattoreFoglia" specification="_DMSyVBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnA-hwLEe-urICxG0GjCg" name="nodo" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNnA-xwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fattori.containsKey(nodo))
			return fattori.get(nodo);
		return 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnoABwLEe-urICxG0GjCg" name="addFattoreConversione" specification="_DMsa8RwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnoARwLEe-urICxG0GjCg" name="foglia" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNnoAhwLEe-urICxG0GjCg" name="fattore" type="_DMrz4BwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>fattori.put(foglia, fattore);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnoAxwLEe-urICxG0GjCg" name="verificaFattoreConversione" specification="_DI7VQBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnoBBwLEe-urICxG0GjCg" name="fattore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNnoBRwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (fattore >= MIN_FATTORECONVERSIONE &amp;&amp; fattore &lt;= MAX_FATTORECONVERSIONE);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnoBhwLEe-urICxG0GjCg" name="addTransitivoFattoreConversione" specification="_DMTZYBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnoBxwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
                <language>java</language>
                <body>for (Nodo nodo1 : gerarchia.getFoglie()) {
         for (Nodo nodo2 : gerarchia.getFoglie()) {
             if (!nodo1.equals(nodo2) &amp;&amp; nodo1.fattoreFoglia(nodo2) == 0) {
                 Double fattore = calcTransitivo(nodo1, nodo2, new ArrayList&lt;>());
                 if (fattore != null) {
                 	nodo1.addFattoreConversione(nodo2, fattore);
                 }
             }
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNnoCBwLEe-urICxG0GjCg" name="calcTransitivo" specification="_DMtCABwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNnoCRwLEe-urICxG0GjCg" name="nodo1" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNnoChwLEe-urICxG0GjCg" name="nodo2" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNnoCxwLEe-urICxG0GjCg" name="visitati" type="_DMCToBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DNnoDBwLEe-urICxG0GjCg" type="_DMrz4BwLEe-urICxG0GjCg" direction="return"/>
                <language>java</language>
                <body>Map&lt;Nodo, Double> fact = nodo1.getFattori();
     if (nodo1.equals(nodo2)) {
         return 1.0;
     } else if (nodo1.fattoreFoglia(nodo2) != 0) {
         return nodo1.fattoreFoglia(nodo2);
     } else {
         if (fact.isEmpty())
             return null;
         for (Map.Entry&lt;Nodo, Double> entry : fact.entrySet()) {
             Nodo key = entry.getKey();
             if (!visitati.contains(key)) {
                 visitati.add(key);
                 Double val = calcTransitivo(key, nodo2, visitati);
                 if (val != null) {
                     return entry.getValue() * val;
                 }
             }
         }
     }
     return null; // Restituiamo null se non è possibile calcolare il fattore di conversione
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNoPEBwLEe-urICxG0GjCg" name="isEmpty" specification="_DI78UBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNoPERwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fattori.size()==0)
			return true;
		return false;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DNoPEhwLEe-urICxG0GjCg" name="toStringF" specification="_DI8jYBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DNoPExwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DNoPFBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer bf = new StringBuffer();
		for (Entry&lt;Nodo, Double> fatt : this.fattori.entrySet()) {
			Nodo key = fatt.getKey();
			Double val = fatt.getValue();
			if (!nome.equals(key.getNome())) {
				// Formatta il double con un massimo di tre decimali
				String formattedVal = String.format(&quot;%.3f&quot;, val);
				bf.append(nome + &quot; - &quot; + key.getNome() + &quot; - &quot; + formattedVal);
				bf.append(&quot;\n&quot;);
			}
		}
		return bf.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DI11sBwLEe-urICxG0GjCg" name="Nodo" method="_DNkksRwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DI2cwhwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DI2cwxwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DNuVvBwLEe-urICxG0GjCg">
                  <body>Costruttore non foglia.
	 * 
	 * @param nome   Il nome del nodo.
	 * @param isRoot True se il nodo è la radice dell'albero, false altrimenti.
	 * @param campo  Il campo associato al nodo (valido solo per i nodi non foglia).</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI11sRwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI2cwBwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI2cwRwLEe-urICxG0GjCg" name="campo">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI2cxBwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DI3D0BwLEe-urICxG0GjCg" name="Nodo" method="_DNkkthwLEe-urICxG0GjCg">
                <eAnnotations xmi:id="_DI3D0xwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DI3D1BwLEe-urICxG0GjCg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DNuVvRwLEe-urICxG0GjCg">
                  <body>Costruttore foglia.
	 * Una foglia non può essere radice, in quanto una radice 
	 * deve avere necessariamente almeno un figlio.
	 * 
	 * @param nome Il nome del nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI3D0RwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI3D0hwLEe-urICxG0GjCg" name="root">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI3D1RwLEe-urICxG0GjCg" type="_DI0nkBwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DI3D1hwLEe-urICxG0GjCg" name="isLeaf" method="_DNlLwBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNuVvhwLEe-urICxG0GjCg">
                  <body>Verifica se il nodo è una foglia.
	 * 
	 * @return True se il nodo è una foglia, altrimenti False.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI3D1xwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI3q4BwLEe-urICxG0GjCg" name="root" method="_DNlLwhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8wBwLEe-urICxG0GjCg">
                  <body>Verifica se il nodo è una radice.
	 * 
	 * @return True se il nodo è una radice, altrimenti False.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI3q4RwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI3q4hwLEe-urICxG0GjCg" name="getCampo" method="_DNlLxBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8wRwLEe-urICxG0GjCg">
                  <body>Restituisce il campo associato al nodo.
	 * 
	 * @return Il campo associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI3q4xwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI4R8BwLEe-urICxG0GjCg" name="getDominio" method="_DNly0BwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8whwLEe-urICxG0GjCg">
                  <body>Restituisce il valore del dominio associato all'i-esimo figlio.
	 * 
	 * @param i L'indice del figlio.
	 * @return Il valore del dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI4R8RwLEe-urICxG0GjCg" name="i">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI4R8hwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI4R8xwLEe-urICxG0GjCg" name="addElementiDominio" method="_DNly0xwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8wxwLEe-urICxG0GjCg">
                  <body>Aggiunge un elemento al dominio del nodo.
	 * 
	 * @param valore       Il valore da aggiungere al dominio.
	 * @param descrizione  La descrizione associata al valore.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI4R9BwLEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI4R9RwLEe-urICxG0GjCg" name="descrizione">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI45ABwLEe-urICxG0GjCg" name="addElementiDominio" method="_DNly1hwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8xBwLEe-urICxG0GjCg">
                  <body>Aggiunge un elemento al dominio del nodo.
	 * 
	 * @param valore Il valore da aggiungere al dominio.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI45ARwLEe-urICxG0GjCg" name="valore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI5gEBwLEe-urICxG0GjCg" name="toString" method="_DNly2hwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8xhwLEe-urICxG0GjCg">
                  <body>Genera una stringa del dominio associato al nodo.
	 * 
	 * @return Una stringa rappresentante il dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI5gERwLEe-urICxG0GjCg" name="blank">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI5gEhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI5gExwLEe-urICxG0GjCg" name="toStringFactors" method="_DNmZ4BwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8xxwLEe-urICxG0GjCg">
                  <body>Genera una stringa delle relazioni di una foglia con le altre foglie.
	 * 
	 * @return Una stringa rappresentante le relazioni con le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI5gFBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI5gFRwLEe-urICxG0GjCg" name="toStringDomain" visibility="private" method="_DNmZ4hwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8yBwLEe-urICxG0GjCg">
                  <body>Genera una stringa del dominio associato al nodo.
	 * 
	 * @return Una stringa rappresentante il dominio associato al nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI6HIBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI6HIRwLEe-urICxG0GjCg" name="toStringChildren" visibility="private" method="_DNmZ5BwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8yRwLEe-urICxG0GjCg">
                  <body>Genera una rappresentazione testuale dei figli del nodo.
	 * 
	 * @return Una stringa rappresentante i figli del nodo.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI6HIhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI6HIxwLEe-urICxG0GjCg" name="verificaEsistenzaNome" method="_DNnA8BwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8yhwLEe-urICxG0GjCg">
                  <body>Verifica se esiste un nodo non radice con il dato nome sotto il nodo radice specificato.
     * 
     * @param nome Il nome del nodo da cercare
     * @param radice Il nodo radice sotto il quale cercare
     * @return true se esiste un nodo con il nome specificato sotto il nodo radice, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI6HJBwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI6uMBwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI6uMRwLEe-urICxG0GjCg" name="toNavigationString" method="_DNnA9xwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DI6uMhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI7VQBwLEe-urICxG0GjCg" name="verificaFattoreConversione" isStatic="true" method="_DNnoAxwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8zhwLEe-urICxG0GjCg">
                  <body>Verifica se un dato fattore di conversione è valido.
     * 
     * @param fattore Il fattore di conversione da verificare
     * @return true se il fattore è compreso nell'intervallo consentito, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI7VQRwLEe-urICxG0GjCg" name="fattore">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI7VQhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI78UBwLEe-urICxG0GjCg" name="isEmpty" visibility="private" method="_DNoPEBwLEe-urICxG0GjCg">
                <ownedParameter xmi:id="_DI78URwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DI8jYBwLEe-urICxG0GjCg" name="toStringF" method="_DNoPEhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu80RwLEe-urICxG0GjCg">
                  <body>Genera una stringa delle relazioni di una foglia con le altre foglie.
	 * 
	 * @return Una stringa rappresentante le relazioni con le foglie.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DI8jYRwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DI8jYhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DMSLQBwLEe-urICxG0GjCg" name="addChild" method="_DNly2BwLEe-urICxG0GjCg" raisedException="_DIQm4BwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8xRwLEe-urICxG0GjCg">
                  <body>Aggiunge un nodo figlio a questo nodo.
	 * 
	 * @param child Il nodo figlio da aggiungere.
	 * @throws LeafHasChildrenException Se il nodo è una foglia, non può avere figli.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMSLQRwLEe-urICxG0GjCg" name="child" type="_DI0nkBwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMSyUBwLEe-urICxG0GjCg" name="verifica" visibility="private" isStatic="true" method="_DNnA8xwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8yxwLEe-urICxG0GjCg">
                  <body>Verifica se esiste un nodo non radice con il dato nome sotto il nodo radice specificato.
     * 
     * @param nome Il nome del nodo da cercare
     * @param radice Il nodo radice sotto il quale cercare
     * @return true se esiste un nodo con il nome specificato sotto il nodo radice, false altrimenti</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMSyURwLEe-urICxG0GjCg" name="nome">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DMSyUhwLEe-urICxG0GjCg" name="radice" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMSyUxwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DMSyVBwLEe-urICxG0GjCg" name="fattoreFoglia" method="_DNnA-RwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8zBwLEe-urICxG0GjCg">
                  <body>Verifica se esiste un fattore di conversione con una data foglia.
	 * 
	 * @param foglia La foglia con cui verificare la relazione.
	 * @return true se esiste una relazione di conversione con la foglia, false altrimenti.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMSyVRwLEe-urICxG0GjCg" name="nodo" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMSyVhwLEe-urICxG0GjCg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DMTZYBwLEe-urICxG0GjCg" name="addTransitivoFattoreConversione" isStatic="true" method="_DNnoBhwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8zxwLEe-urICxG0GjCg">
                  <body>Aggiunge i fattori di conversione transitivi tra TUTTE le coppie di foglie nella gerarchia.
     * 
     * @param gerarchia La gerarchia su cui operare</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMTZYRwLEe-urICxG0GjCg" name="gerarchia" type="_DIGO0BwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMsa8RwLEe-urICxG0GjCg" name="addFattoreConversione" method="_DNnoABwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu8zRwLEe-urICxG0GjCg">
                  <body>Aggiunge un fattore di conversione associato al nodo.
	 * 
	 * @param foglia  Il nodo foglia con cui associare il fattore.
	 * @param fattore Il fattore di conversione da aggiungere.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMsa8hwLEe-urICxG0GjCg" name="foglia" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMsa8xwLEe-urICxG0GjCg" name="fattore" type="_DMrz4BwLEe-urICxG0GjCg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DMtCABwLEe-urICxG0GjCg" name="calcTransitivo" visibility="private" isStatic="true" method="_DNnoCBwLEe-urICxG0GjCg">
                <ownedComment xmi:id="_DNu80BwLEe-urICxG0GjCg">
                  <body>Metodo per calcolare il fattore di conversione transitivo tra due nodi.
     * 
     * @param nodo1 Il primo nodo
     * @param nodo2 Il secondo nodo
     * @param visitati Lista dei nodi visitati durante il calcolo
     * @return Il fattore di conversione transitivo tra i due nodi, null se non è possibile calcolarlo</body>
                </ownedComment>
                <ownedParameter xmi:id="_DMtCARwLEe-urICxG0GjCg" name="nodo1" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMtCAhwLEe-urICxG0GjCg" name="nodo2" type="_DI0nkBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMtCAxwLEe-urICxG0GjCg" name="visitati" type="_DMCToBwLEe-urICxG0GjCg"/>
                <ownedParameter xmi:id="_DMtCBBwLEe-urICxG0GjCg" type="_DMrz4BwLEe-urICxG0GjCg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN5U0RwLEe-urICxG0GjCg" name="" memberEnd="_DN5U0hwLEe-urICxG0GjCg _DM4BIRwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN5U0hwLEe-urICxG0GjCg" name="" type="_DH8d0BwLEe-urICxG0GjCg" association="_DN5U0RwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN574RwLEe-urICxG0GjCg" name="" memberEnd="_DN574hwLEe-urICxG0GjCg _DM7EchwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN574hwLEe-urICxG0GjCg" name="" type="_DIGO0BwLEe-urICxG0GjCg" association="_DN574RwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN6i8RwLEe-urICxG0GjCg" name="" memberEnd="_DN6i8hwLEe-urICxG0GjCg _DM7rghwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN6i8hwLEe-urICxG0GjCg" name="" type="_DIGO0BwLEe-urICxG0GjCg" association="_DN6i8RwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN7KARwLEe-urICxG0GjCg" name="" memberEnd="_DN7KAhwLEe-urICxG0GjCg _DM8SkhwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN7KAhwLEe-urICxG0GjCg" name="" type="_DIGO0BwLEe-urICxG0GjCg" association="_DN7KARwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN7xERwLEe-urICxG0GjCg" name="" memberEnd="_DN7xEhwLEe-urICxG0GjCg _DM_88BwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN7xEhwLEe-urICxG0GjCg" name="" type="_DIR1ABwLEe-urICxG0GjCg" association="_DN7xERwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN8YIRwLEe-urICxG0GjCg" name="" memberEnd="_DN8YIhwLEe-urICxG0GjCg _DM_88xwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN8YIhwLEe-urICxG0GjCg" name="" type="_DIWGcBwLEe-urICxG0GjCg" association="_DN8YIRwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DN_bcRwLEe-urICxG0GjCg" name="" memberEnd="_DN_bchwLEe-urICxG0GjCg _DNJG4xwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DN_bchwLEe-urICxG0GjCg" name="" type="_DI0nkBwLEe-urICxG0GjCg" association="_DN_bcRwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DOACgRwLEe-urICxG0GjCg" name="" memberEnd="_DOACghwLEe-urICxG0GjCg _DNJt8hwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DOACghwLEe-urICxG0GjCg" name="" type="_DI0nkBwLEe-urICxG0GjCg" association="_DOACgRwLEe-urICxG0GjCg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DOApkRwLEe-urICxG0GjCg" name="" memberEnd="_DOApkhwLEe-urICxG0GjCg _DNK8EhwLEe-urICxG0GjCg">
              <ownedEnd xmi:id="_DOApkhwLEe-urICxG0GjCg" name="" type="_DI0nkBwLEe-urICxG0GjCg" association="_DOApkRwLEe-urICxG0GjCg"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_F73bgC1lEe-8Nr2H9gftQA" name="NewClass1"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DGKVIBwLEe-urICxG0GjCg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_DGKVIRwLEe-urICxG0GjCg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_DG9mYBwLEe-urICxG0GjCg" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_DMQ9IRwLEe-urICxG0GjCg" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_DL3UgBwLEe-urICxG0GjCg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DMCToBwLEe-urICxG0GjCg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DMOg4BwLEe-urICxG0GjCg" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DMPvARwLEe-urICxG0GjCg" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DMQWERwLEe-urICxG0GjCg" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DMaHEBwLEe-urICxG0GjCg" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DMu3MBwLEe-urICxG0GjCg" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DGdQEBwLEe-urICxG0GjCg" name="io">
        <packagedElement xmi:type="uml:Interface" xmi:id="_DL-pQBwLEe-urICxG0GjCg" name="Serializable"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DMbVMBwLEe-urICxG0GjCg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_DMbVMRwLEe-urICxG0GjCg" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DMoJgBwLEe-urICxG0GjCg" name="StringBuffer"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_DMrz4BwLEe-urICxG0GjCg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_CtIKEBwLEe-urICxG0GjCg">
      <eAnnotations xmi:id="_CtKmUBwLEe-urICxG0GjCg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_CtNCkBwLEe-urICxG0GjCg" base_Package="_Cn0MQBwLEe-urICxG0GjCg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIIrEBwLEe-urICxG0GjCg" base_Element="_DIIEAxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_DIJSIBwLEe-urICxG0GjCg" base_Element="_DIIEAxwLEe-urICxG0GjCg">
    <annotations xmi:id="_DIJSIRwLEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DIxkQhwLEe-urICxG0GjCg" base_Element="_DIxkQBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Annotations xmi:id="_DIyLUBwLEe-urICxG0GjCg" base_Element="_DIxkQBwLEe-urICxG0GjCg">
    <annotations xmi:id="_DIyLURwLEe-urICxG0GjCg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DL37kBwLEe-urICxG0GjCg" base_Element="_DL3UgBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DL_QUBwLEe-urICxG0GjCg" base_Element="_DL-pQBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMC6sBwLEe-urICxG0GjCg" base_Element="_DMCToBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMPvABwLEe-urICxG0GjCg" base_Element="_DMOg4BwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMQWEBwLEe-urICxG0GjCg" base_Element="_DMPvARwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMQ9IBwLEe-urICxG0GjCg" base_Element="_DMQWERwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMRkMBwLEe-urICxG0GjCg" base_Element="_DMQ9IRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMauIBwLEe-urICxG0GjCg" base_Element="_DMaHEBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMb8QBwLEe-urICxG0GjCg" base_Element="_DMbVMRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DMdxcBwLEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_DMcjVBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DMeYgBwLEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_DMdxcxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DMlGMBwLEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_DMkfIhwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMowkBwLEe-urICxG0GjCg" base_Element="_DMoJgBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMsa8BwLEe-urICxG0GjCg" base_Element="_DMrz4BwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DMtpEBwLEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_DMtCAxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DMveQBwLEe-urICxG0GjCg" base_Element="_DMu3MBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM0WwBwLEe-urICxG0GjCg" base_Element="_DMzIoBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM090RwLEe-urICxG0GjCg" base_Element="_DM0WwxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM091BwLEe-urICxG0GjCg" base_Element="_DM090hwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM1k4hwLEe-urICxG0GjCg" base_Element="_DM1k4BwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM2L8BwLEe-urICxG0GjCg" base_Element="_DM1k4xwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_DM2L8xwLEe-urICxG0GjCg" base_Element="_DM2L8RwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM2zABwLEe-urICxG0GjCg" base_Element="_DM2L8RwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DM4oMBwLEe-urICxG0GjCg" genericsValue="String" base_Element="_DM4BIRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DM7rgBwLEe-urICxG0GjCg" genericsValue="Albero" base_Element="_DM7EchwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM7rgRwLEe-urICxG0GjCg" base_Element="_DM7EchwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DM8SkBwLEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_DM7rghwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM8SkRwLEe-urICxG0GjCg" base_Element="_DM7rghwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DM85oBwLEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_DM8SkhwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_DM-HwBwLEe-urICxG0GjCg" base_Element="_DM9gsBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM-HwhwLEe-urICxG0GjCg" base_Element="_DM9gsBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_DM-u0BwLEe-urICxG0GjCg" base_Element="_DM-HwxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DM-u0hwLEe-urICxG0GjCg" base_Element="_DM-HwxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DNAkABwLEe-urICxG0GjCg" genericsValue="Utente" base_Element="_DM_88xwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DNByIBwLEe-urICxG0GjCg" genericsValue="Nodo" base_Element="_DNBLEhwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Array xmi:id="_DNDAQBwLEe-urICxG0GjCg" base_Element="_DNCZNRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DNHRsRwLEe-urICxG0GjCg" genericsValue="Comprensorio" base_Element="_DNHRsBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNJG4BwLEe-urICxG0GjCg" base_Element="_DNIf0xwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNJG4hwLEe-urICxG0GjCg" base_Element="_DNJG4RwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNJt8RwLEe-urICxG0GjCg" base_Element="_DNJt8BwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DNKVABwLEe-urICxG0GjCg" genericsValue="String[]" base_Element="_DNJt8hwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNK8ExwLEe-urICxG0GjCg" base_Element="_DNK8EhwLEe-urICxG0GjCg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_DNMKMBwLEe-urICxG0GjCg" name="getFattori" method="_DNj9pBwLEe-urICxG0GjCg">
      <ownedParameter xmi:id="_DNMxQBwLEe-urICxG0GjCg" type="_DMPvARwLEe-urICxG0GjCg" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_DNLjIBwLEe-urICxG0GjCg" genericsValue="Nodo, Double" base_Element="_DNK8EhwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Generics xmi:id="_DNMKMRwLEe-urICxG0GjCg" genericsValue="Nodo, Double" base_Element="_DNMKMBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNNYUhwLEe-urICxG0GjCg" base_Element="_DNNYUBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNN_ZRwLEe-urICxG0GjCg" base_Element="_DNN_YxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNOmchwLEe-urICxG0GjCg" base_Element="_DNOmcBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNPNgBwLEe-urICxG0GjCg" base_Element="_DNOmcxwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNPNgxwLEe-urICxG0GjCg" base_Element="_DNPNgRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNP0kRwLEe-urICxG0GjCg" base_Element="_DNPNhBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNQboBwLEe-urICxG0GjCg" base_Element="_DNP0khwLEe-urICxG0GjCg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DNQboxwLEe-urICxG0GjCg" base_Element="_DNQboRwLEe-urICxG0GjCg"/>
  <uml:OpaqueBehavior xmi:id="_DNj9pBwLEe-urICxG0GjCg" name="getFattori" specification="_DNMKMBwLEe-urICxG0GjCg">
    <ownedParameter xmi:id="_DNkksBwLEe-urICxG0GjCg" type="_DMPvARwLEe-urICxG0GjCg" direction="return"/>
    <language>java</language>
    <body>return fattori;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_DN5U0BwLEe-urICxG0GjCg" base_Element="_DN4twBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN574BwLEe-urICxG0GjCg" base_Element="_DN5U0RwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN6i8BwLEe-urICxG0GjCg" base_Element="_DN574RwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN7KABwLEe-urICxG0GjCg" base_Element="_DN6i8RwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN7xEBwLEe-urICxG0GjCg" base_Element="_DN7KARwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN8YIBwLEe-urICxG0GjCg" base_Element="_DN7xERwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN8YIxwLEe-urICxG0GjCg" base_Element="_DN8YIRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN8_MBwLEe-urICxG0GjCg" base_Element="_DN8YJBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN9mQBwLEe-urICxG0GjCg" base_Element="_DN8_MRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN9mQxwLEe-urICxG0GjCg" base_Element="_DN9mQRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN-NUBwLEe-urICxG0GjCg" base_Element="_DN9mRBwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN-0YBwLEe-urICxG0GjCg" base_Element="_DN-NURwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DN_bcBwLEe-urICxG0GjCg" base_Element="_DN-0YRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DOACgBwLEe-urICxG0GjCg" base_Element="_DN_bcRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DOApkBwLEe-urICxG0GjCg" base_Element="_DOACgRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DOBQoBwLEe-urICxG0GjCg" base_Element="_DOApkRwLEe-urICxG0GjCg"/>
  <UMLLabProfile:Reference xmi:id="_DOBQoxwLEe-urICxG0GjCg" base_Element="_DOBQoRwLEe-urICxG0GjCg"/>
</xmi:XMI>
